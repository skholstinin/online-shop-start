{
  "version": 3,
  "sources": [
    "webpack:///$_lazy_route_resource lazy namespace object",
    "webpack:///src/app/_guards/auth.guard.ts",
    "webpack:///src/app/_interceptors/error-interceptor.service.ts",
    "webpack:///src/app/_interceptors/jwt-interceptor.service.ts",
    "webpack:///src/app/app-routing.module.ts",
    "webpack:///src/app/app.component.ts",
    "webpack:///src/app/app.component.html",
    "webpack:///src/app/app.module.ts",
    "webpack:///src/app/enum/OrderStatus.ts",
    "webpack:///src/app/enum/Role.ts",
    "webpack:///src/app/models/ProductInOrder.ts",
    "webpack:///src/app/models/User.ts",
    "webpack:///src/app/models/productInfo.ts",
    "webpack:///src/app/pages/card/card.component.ts",
    "webpack:///src/app/pages/card/card.component.html",
    "webpack:///src/app/pages/cart/cart.component.ts",
    "webpack:///src/app/pages/cart/cart.component.html",
    "webpack:///src/app/pages/login/login.component.ts",
    "webpack:///src/app/pages/login/login.component.html",
    "webpack:///src/app/pages/order-detail/order-detail.component.ts",
    "webpack:///src/app/pages/order-detail/order-detail.component.html",
    "webpack:///src/app/pages/order/order.component.ts",
    "webpack:///src/app/pages/order/order.component.html",
    "webpack:///src/app/pages/product-detail/detail.component.ts",
    "webpack:///src/app/pages/product-detail/detail.component.html",
    "webpack:///src/app/pages/product-edit/product-edit.component.ts",
    "webpack:///src/app/pages/product-edit/product-edit.component.html",
    "webpack:///src/app/pages/product-list/product.list.component.ts",
    "webpack:///src/app/pages/product-list/product.list.component.html",
    "webpack:///src/app/pages/signup/signup.component.ts",
    "webpack:///src/app/pages/signup/signup.component.html",
    "webpack:///src/app/pages/user-edit/user-detail.component.ts",
    "webpack:///src/app/pages/user-edit/user-detail.component.html",
    "webpack:///src/app/parts/navigation/navigation.component.ts",
    "webpack:///src/app/parts/navigation/navigation.component.html",
    "webpack:///src/app/parts/pagination/pagination.component.ts",
    "webpack:///src/app/parts/pagination/pagination.component.html",
    "webpack:///src/app/services/cart.service.ts",
    "webpack:///src/app/services/order.service.ts",
    "webpack:///src/app/services/product.service.ts",
    "webpack:///src/app/services/user.service.ts",
    "webpack:///src/environments/environment.ts",
    "webpack:///src/main.ts"
  ],
  "names": [
    "webpackEmptyAsyncContext",
    "req",
    "Promise",
    "resolve",
    "then",
    "e",
    "Error",
    "code",
    "keys",
    "module",
    "exports",
    "id",
    "AuthGuard",
    "router",
    "userService",
    "route",
    "state",
    "currentUser",
    "currentUserValue",
    "data",
    "roles",
    "indexOf",
    "role",
    "console",
    "log",
    "navigate",
    "queryParams",
    "returnUrl",
    "url",
    "providedIn",
    "ErrorInterceptor",
    "request",
    "next",
    "handle",
    "pipe",
    "err",
    "status",
    "logout",
    "error",
    "statusText",
    "JwtInterceptor",
    "token",
    "clone",
    "setHeaders",
    "Authorization",
    "type",
    "routes",
    "path",
    "redirectTo",
    "pathMatch",
    "component",
    "canActivate",
    "Customer",
    "Seller",
    "AppRoutingModule",
    "forRoot",
    "declarations",
    "imports",
    "AppComponent",
    "title",
    "selector",
    "templateUrl",
    "styleUrls",
    "AppModule",
    "provide",
    "useClass",
    "multi",
    "providers",
    "bootstrap",
    "OrderStatus",
    "Role",
    "ProductInOrder",
    "productInfo",
    "quantity",
    "productId",
    "productName",
    "productPrice",
    "productStock",
    "productDescription",
    "productIcon",
    "count",
    "User",
    "active",
    "ProductInfo",
    "productInOrder",
    "productStatus",
    "CardComponent",
    "productService",
    "querySub",
    "subscribe",
    "update",
    "paramSub",
    "params",
    "unsubscribe",
    "snapshot",
    "queryParamMap",
    "get",
    "currentPage",
    "size",
    "getProds",
    "page",
    "length",
    "getAllInPage",
    "getCategoryInPage",
    "categoryPage",
    "category",
    "CartComponent",
    "cartService",
    "productInOrders",
    "total",
    "updateTerms",
    "userSubscription",
    "user",
    "getCart",
    "prods",
    "sub",
    "prod",
    "_",
    "storeLocalCart",
    "reduce",
    "prev",
    "cur",
    "validateCount",
    "remove",
    "success",
    "filter",
    "checkout",
    "error1",
    "max",
    "LoginComponent",
    "submitted",
    "model",
    "username",
    "password",
    "remembered",
    "isLogout",
    "has",
    "login",
    "navigateByUrl",
    "isInvalid",
    "u",
    "p",
    "onSubmit",
    "fillLoginFields",
    "OrderDetailComponent",
    "orderService",
    "order$",
    "show",
    "paramMap",
    "OrderComponent",
    "httpClient",
    "nextPage",
    "getPage",
    "order",
    "cancel",
    "orderId",
    "res",
    "orderStatus",
    "finish",
    "DetailComponent",
    "cookieService",
    "getProduct",
    "getDetail",
    "addItem",
    "addToCart",
    "ProductEditComponent",
    "product",
    "isEdit",
    "add",
    "create",
    "ProductListComponent",
    "productInfos",
    "delelte",
    "SignupComponent",
    "location",
    "signUp",
    "Location",
    "UserDetailComponent",
    "account",
    "nameTerms",
    "name",
    "NavigationComponent",
    "root",
    "name$",
    "aName",
    "currentUserSubscription",
    "PaginationComponent",
    "i",
    "Array",
    "CartService",
    "http",
    "cartUrl",
    "localMap",
    "itemsSubject",
    "items",
    "asObservable",
    "totalSubject",
    "check",
    "JSON",
    "parse",
    "Object",
    "values",
    "localCart",
    "getLocalCart",
    "post",
    "clearLocalCart",
    "cart",
    "products",
    "set",
    "stringify",
    "put",
    "OrderService",
    "orderUrl",
    "patch",
    "ProductService",
    "productUrl",
    "categoryUrl",
    "categoryType",
    "operation",
    "result",
    "UserService",
    "memo",
    "localStorage",
    "getItem",
    "currentUserSubject",
    "loginForm",
    "setItem",
    "handleError",
    "removeItem",
    "email",
    "value",
    "environment",
    "production",
    "apiUrl",
    "bootstrapModule"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,S;;;AAGX,yBACUC,MADV,EAEUC,WAFV,EAEkC;AAAA;;AADxB,aAAAD,MAAA,GAAAA,MAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AAET;;;;oCAGCC,K,EACAC,K,EAA0B;AAC1B,cAAMC,WAAW,GAAG,KAAKH,WAAL,CAAiBI,gBAArC;;AACA,cAAID,WAAJ,EAAiB;AACf;AACA,gBAAIF,KAAK,CAACI,IAAN,CAAWC,KAAX,IAAoBL,KAAK,CAACI,IAAN,CAAWC,KAAX,CAAiBC,OAAjB,CAAyBJ,WAAW,CAACK,IAArC,MAA+C,CAAC,CAAxE,EAA2E;AACzEC,qBAAO,CAACC,GAAR,CAAYP,WAAW,CAACK,IAAZ,GAAmB,UAAnB,GAAgCP,KAAK,CAACI,IAAN,CAAWC,KAAvD,EADyE,CAEzE;;AACA,mBAAKP,MAAL,CAAYY,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACA,qBAAO,KAAP;AACD,aAPc,CAQf;;;AACA,mBAAO,IAAP;AACD;;AAEDF,iBAAO,CAACC,GAAR,CAAY,aAAZ,EAd0B,CAe1B;;AACA,eAAKX,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACC,uBAAW,EAAE;AAACC,uBAAS,EAAEX,KAAK,CAACY;AAAlB;AAAd,WAAjC;AACA,iBAAO,KAAP;AACD;;;;;;;uBA7BUhB,S,EAAS,8G,EAAA,0H;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACViB,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,gB;;;AACX,gCAAoBhB,WAApB,EACoBD,MADpB,EACoC;AAAA;;AADhB,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAD,MAAA,GAAAA,MAAA;AACnB;;;;kCAESkB,O,EAA2BC,I,EAAiB;AAAA;;AACpD,iBAAOA,IAAI,CAACC,MAAL,CAAYF,OAAZ,EAAqBG,IAArB,CAA0B,kEAAW,UAAAC,GAAG,EAAI;AACjD,gBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACA,mBAAI,CAACtB,WAAL,CAAiBuB,MAAjB;;AACA,mBAAI,CAACxB,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;AAED,gBAAMa,KAAK,GAAGH,GAAG,CAACG,KAAJ,IAAaH,GAAG,CAACI,UAA/B;AACA,mBAAO,wDAAWD,KAAX,CAAP;AACD,WATgC,CAA1B,CAAP;AAUD;;;;;;;uBAhBUR,gB,EAAgB,0H,EAAA,8G;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVD,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaW,c;;;AAGX,8BAAoB1B,WAApB,EAA4C;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AAGnB;;;;kCAESiB,O,EAA2BC,I,EAAiB;AACpD;AACA,cAAMf,WAAW,GAAG,KAAKH,WAAL,CAAiBI,gBAArC;;AACA,cAAID,WAAW,IAAIA,WAAW,CAACwB,KAA/B,EAAsC;AACpCV,mBAAO,GAAGA,OAAO,CAACW,KAAR,CAAc;AACtBC,wBAAU,EAAE;AACVC,6BAAa,YAAK3B,WAAW,CAAC4B,IAAjB,cAAyB5B,WAAW,CAACwB,KAArC,CADH;AAEV,gCAAgB;AAFN;AADU,aAAd,CAAV;AAMD;;AACD,iBAAOT,IAAI,CAACC,MAAL,CAAYF,OAAZ,CAAP;AACD;;;;;;;uBApBUS,c,EAAc,0H;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVX,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMiB,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,EAAP;AAAWC,gBAAU,EAAE,UAAvB;AAAmCC,eAAS,EAAE;AAA9C,KADqB,EAErB;AAACF,UAAI,EAAE,aAAP;AAAsBG,eAAS,EAAE;AAAjC,KAFqB,EAGrB;AAACH,UAAI,EAAE,cAAP;AAAuBG,eAAS,EAAE;AAAlC,KAHqB,EAIrB;AAACH,UAAI,EAAE,SAAP;AAAkBG,eAAS,EAAE;AAA7B,KAJqB,EAKrB;AAACH,UAAI,EAAE,UAAP;AAAmBG,eAAS,EAAE;AAA9B,KALqB,EAMrB;AAACH,UAAI,EAAE,OAAP;AAAgBG,eAAS,EAAE;AAA3B,KANqB,EAOrB;AAACH,UAAI,EAAE,QAAP;AAAiBG,eAAS,EAAE;AAA5B,KAPqB,EAQrB;AAACH,UAAI,EAAE,UAAP;AAAmBG,eAAS,EAAE;AAA9B,KARqB,EASrB;AAACH,UAAI,EAAE,MAAP;AAAeG,eAAS,EAAE;AAA1B,KATqB,EAUrB;AAACH,UAAI,EAAE,SAAP;AAAkBG,eAAS,EAAE;AAA7B,KAVqB,EAWrB;AAACH,UAAI,EAAE,WAAP;AAAoBG,eAAS,EAAE,+FAA/B;AAAqDC,iBAAW,EAAE,CAAC,4DAAD;AAAlE,KAXqB,EAYrB;AAACJ,UAAI,EAAE,OAAP;AAAgBG,eAAS,EAAE,2EAA3B;AAA2CC,iBAAW,EAAE,CAAC,4DAAD;AAAxD,KAZqB,EAarB;AAACJ,UAAI,EAAE,QAAP;AAAiBC,gBAAU,EAAE,gBAA7B;AAA+CC,eAAS,EAAE;AAA1D,KAbqB,EAcrB;AACEF,UAAI,EAAE,gBADR;AAEEG,eAAS,EAAE,gGAFb;AAGEC,iBAAW,EAAE,CAAC,4DAAD,CAHf;AAIEhC,UAAI,EAAE;AAACC,aAAK,EAAE,CAAC,iDAAKgC,QAAN,EAAgB,iDAAKC,MAArB;AAAR;AAJR,KAdqB,EAoBrB;AACEN,UAAI,EAAE,SADR;AAEEG,eAAS,EAAE,2FAFb;AAGEC,iBAAW,EAAE,CAAC,4DAAD;AAHf,KApBqB,EAyBrB;AACEJ,UAAI,EAAE,yBADR;AAEEG,eAAS,EAAE,gGAFb;AAGEC,iBAAW,EAAE,CAAC,4DAAD,CAHf;AAIEhC,UAAI,EAAE;AAACC,aAAK,EAAE,CAAC,iDAAKgC,QAAN,EAAgB,iDAAKC,MAArB;AAAR;AAJR,KAzBqB,EA+BrB;AACEN,UAAI,EAAE,wBADR;AAEEG,eAAS,EAAE,gGAFb;AAGEC,iBAAW,EAAE,CAAC,4DAAD,CAHf;AAIEhC,UAAI,EAAE;AAACC,aAAK,EAAE,CAAC,iDAAKgC,QAAN;AAAR;AAJR,KA/BqB,CAAvB;;QA+CaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBALlB,CACP,6DAAaC,OAAb,CAAqBT,MAArB,CADO,CACqB;AADrB,OAKkB,EAFjB,4DAEiB;;;;0HAAhBQ,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAP5B,sDAO4B;eAPnB;AACRE,sBAAY,EAAE,EADN;AAERC,iBAAO,EAAE,CACP,6DAAaF,OAAb,CAAqBT,MAArB,CADO,CACqB;AADrB,WAFD;AAKRpC,iBAAO,EAAE,CAAC,4DAAD;AALD,S;AAOmB,Q;;;;;;;;;;;;;;;;;;AC9D7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagD,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,aAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACNzB;;AACE;;AACA;;AACF;;;;;;;;;sEDGaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBALT,CAAC,iEAAD,EACT;AAACC,eAAO,EAAE,uEAAV;AAA6BC,gBAAQ,EAAE,qFAAvC;AAAuDC,aAAK,EAAE;AAA9D,OADS,EAET;AAACF,eAAO,EAAE,uEAAV;AAA6BC,gBAAQ,EAAE,yFAAvC;AAAyDC,aAAK,EAAE;AAAhE,OAFS,C;AAE6D,gBAT/D,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,sEAJO,CAS+D;;;;0HAG7DH,S,EAAS;AAAA,uBA3BlB,2DA2BkB,EA1BlB,2FA0BkB,EAzBlB,wEAyBkB,EAxBlB,0FAwBkB,EAvBlB,2EAuBkB,EAtBlB,8EAsBkB,EArBlB,sFAqBkB,EApBlB,yEAoBkB,EAnBlB,4EAmBkB,EAlBlB,gGAkBkB,EAjBlB,gGAiBkB,EAhBlB,2FAgBkB,EAflB,gGAekB;AAfE,kBAIpB,uEAJoB,EAKpB,oEALoB,EAMpB,0DANoB,EAOpB,sEAPoB;AAeF,O;AARF,K;;;;;sEAQPA,S,EAAS;cA7BrB,sDA6BqB;eA7BZ;AACRP,sBAAY,EAAE,CACZ,2DADY,EAEZ,2FAFY,EAGZ,wEAHY,EAIZ,0FAJY,EAKZ,2EALY,EAMZ,8EANY,EAOZ,sFAPY,EAQZ,yEARY,EASZ,4EATY,EAUZ,gGAVY,EAWZ,gGAXY,EAYZ,2FAZY,EAaZ,gGAbY,CADN;AAiBRC,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,sEAJO,CAjBD;AAwBRU,mBAAS,EAAE,CAAC,iEAAD,EACT;AAACH,mBAAO,EAAE,uEAAV;AAA6BC,oBAAQ,EAAE,qFAAvC;AAAuDC,iBAAK,EAAE;AAA9D,WADS,EAET;AAACF,mBAAO,EAAE,uEAAV;AAA6BC,oBAAQ,EAAE,yFAAvC;AAAyDC,iBAAK,EAAE;AAAhE,WAFS,CAxBH;AA2BRE,mBAAS,EAAE,CAAC,2DAAD;AA3BH,S;AA6BY,Q;;;;;;;;;;;;;;;;;;ACrDtB;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAYC,WAAZ;;AAAA,eAAYA,WAAZ,EAAuB;AACrB;AACA;AACA;AACD,KAJD,EAAYA,WAAW,KAAXA,WAAW,MAAvB;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAYC,IAAZ;;AAAA,eAAYA,IAAZ,EAAgB;AACd;AACA;AACD,KAHD,EAAYA,IAAI,KAAJA,IAAI,MAAhB;;;;;;;;;;;;;;;;;ACEA;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,c,GASX,wBAAYC,WAAZ,EAAoD;AAAA,UAAdC,QAAc,uEAAH,CAAG;;AAAA;;AAClD,WAAKC,SAAL,GAAiBF,WAAW,CAACE,SAA7B;AACA,WAAKC,WAAL,GAAmBH,WAAW,CAACG,WAA/B;AACA,WAAKC,YAAL,GAAoBJ,WAAW,CAACI,YAAhC;AACA,WAAKC,YAAL,GAAoBL,WAAW,CAACK,YAAhC;AACA,WAAKC,kBAAL,GAA0BN,WAAW,CAACM,kBAAtC;AACA;AACA,WAAKC,WAAL,GAAmBP,WAAW,CAACO,WAA/B;AACA,WAAKC,KAAL,GAAaP,QAAb;AACD,K;;;;;;;;;;;;;;;;;ACpBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaQ,I,GAgBX,gBAAc;AAAA;;AACZ,WAAKC,MAAL,GAAc,IAAd;AACA,WAAK5D,IAAL,GAAY,gDAAK8B,QAAjB;AACD,K;;;;;;;;;;;;;;;;;ACnBH;AAAA;;;AAAA;AAAA;AAAA;;QAAa+B,W,GAYX,qBAAYC,cAAZ,EAA6C;AAAA;;AAC3C,UAAIA,cAAJ,EAAoB;AAClB,aAAKV,SAAL,GAAiBU,cAAc,CAACV,SAAhC;AACA,aAAKC,WAAL,GAAmBS,cAAc,CAACT,WAAlC;AACA,aAAKC,YAAL,GAAoBQ,cAAc,CAACR,YAAnC;AACA,aAAKC,YAAL,GAAoBO,cAAc,CAACP,YAAnC;AACA,aAAKC,kBAAL,GAA0BM,cAAc,CAACN,kBAAzC;AACA,aAAKC,WAAL,GAAmBK,cAAc,CAACL,WAAlC;AACA,aAAKM,aAAL,GAAqB,CAArB;AACD,OARD,MAQO;AACL,aAAKX,SAAL,GAAiB,EAAjB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKC,YAAL,GAAoB,GAApB;AACA,aAAKC,kBAAL,GAA0B,EAA1B;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKM,aAAL,GAAqB,CAArB;AACD;AACF,K;;;;;;;;;;;;;;;;;AChCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaQ;;AAEC;;AAAO;;;;;;AAFL;;;;;;AAGoB;;AAA6C;;AAAW;;;;;;AAdrF;;AACE;;AACE;;AACA;;AACE;;AAAwB;;AAA2B;;AACnD;;AACE;;AAAqB;;AAAQ;;AAAa;;AAAS;;AAAkC;;AACrF;;AAAqB;;AAAQ;;AAAO;;AAAS;;;;AAAuC;;AACpF;;AAAqB;;AAAQ;;AAAO;;AAAS;;AAA4B;;AAC3E;;AACA;;AACA;;AAGA;;AACF;;AACF;;AACF;;;;;;;;AAf2C;;AAAA;;AAAkC;;AAE/C;;AAAA;;AAE6B;;AAAA;;AACN;;AAAA;;AACA;;AAAA;;AAGI;;AAAA,4GAAqD,UAArD,EAAqD,GAArD;;;;QDF9CC,a;;;AASX,6BAAoBC,cAApB,EACoBxE,KADpB,EAC2C;AAAA;;AADvB,aAAAwE,cAAA,GAAAA,cAAA;AACA,aAAAxE,KAAA,GAAAA,KAAA;AAEnB;;;;mCAGU;AAAA;;AACT,eAAKyE,QAAL,GAAgB,KAAKzE,KAAL,CAAWW,WAAX,CAAuB+D,SAAvB,CAAiC,YAAM;AACrD,kBAAI,CAACC,MAAL;AACD,WAFe,CAAhB;AAGA,eAAKC,QAAL,GAAgB,KAAK5E,KAAL,CAAW6E,MAAX,CAAkBH,SAAlB,CAA4B,YAAM;AAChD,kBAAI,CAACC,MAAL;AACD,WAFe,CAAhB;AAID;;;sCAEU;AACT,eAAKF,QAAL,CAAcK,WAAd;AACA,eAAKF,QAAL,CAAcE,WAAd;AACD;;;iCAEQ;AACP,cAAI,KAAK9E,KAAL,CAAW+E,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,MAAtC,CAAJ,EAAmD;AACjD,gBAAMC,WAAW,GAAG,CAAC,KAAKlF,KAAL,CAAW+E,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,MAAtC,CAArB;AACA,gBAAME,IAAI,GAAG,CAAC,KAAKnF,KAAL,CAAW+E,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,MAAtC,CAAd;AACA,iBAAKG,QAAL,CAAcF,WAAd,EAA2BC,IAA3B;AACD,WAJD,MAIO;AACL,iBAAKC,QAAL;AACD;AACF;;;mCAE4C;AAAA;;AAAA,cAApCC,IAAoC,uEAArB,CAAqB;AAAA,cAAlBF,IAAkB,uEAAH,CAAG;;AAC3C,cAAI,KAAKnF,KAAL,CAAW+E,QAAX,CAAoBlE,GAApB,CAAwByE,MAAxB,IAAkC,CAAtC,EAAyC;AACvC,iBAAKd,cAAL,CAAoBe,YAApB,CAAiC,CAACF,IAAlC,EAAwC,CAACF,IAAzC,EACGT,SADH,CACa,UAAAW,IAAI,EAAI;AACjB,oBAAI,CAACA,IAAL,GAAYA,IAAZ;AACA,oBAAI,CAACzC,KAAL,GAAa,wBAAb;AACD,aAJH;AAKD,WAND,MAMO;AAAE;AACP,gBAAMd,IAAI,GAAG,KAAK9B,KAAL,CAAW+E,QAAX,CAAoBlE,GAApB,CAAwB,CAAxB,EAA2BmB,IAAxC;AACA,iBAAKwC,cAAL,CAAoBgB,iBAApB,CAAsC,CAAC1D,IAAvC,EAA6CuD,IAA7C,EAAmDF,IAAnD,EACGT,SADH,CACa,UAAAe,YAAY,EAAI;AACzB,oBAAI,CAAC7C,KAAL,GAAa6C,YAAY,CAACC,QAA1B;AACA,oBAAI,CAACL,IAAL,GAAYI,YAAY,CAACJ,IAAzB;AACD,aAJH;AAKD;AAEF;;;;;;;uBAxDUd,a,EAAa,yI,EAAA,+H;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,siB;AAAA;AAAA;ACX1B;;AAA0C;;AAAS;;AACnD;;AACE;;AAkBF;;AACA;;;;AArB0C;;AAAA;;AAEnC;;AAAA;;AAmBS;;AAAA;;;;;;;;;;sEDVHA,a,EAAa;cALzB,uDAKyB;eALf;AACT1B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACiBE;;AACE;;AACE;;AAAsD;;AAAtD;;AAGF;;AACA;;AAAyB;;AAC4B;;AAA8B;;AAAI;;AACvF;;AAAyB;;;;AAA0C;;AAEnE;;AACE;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAA2B;;AACjE;;AAEO;AAAA;;AAAA;AAAA;AAAA,WAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAAlC;;AAFP;;AAQA;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkC;;AAA0B;;AACjE;;AAEA;;AAAyB;;;;AAA+D;;AACxF;;AACE;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiD;;AAAM;;AAC5D;;AAEF;;;;;;AA1BO;;AAAA;;AACwD;;AAAA;;AACA;;AAG3D;;AAAA;;AAAmD;;AAAA;;AAC5B;;AAAA;;AAIR;;AAAA;;AACR,yGAAiC,SAAjC,EAAiC,wBAAjC;;AAUgB;;AAAA;;;;;;;;AAU7B;;AACE;;AAA6B;;;;AAA2B;;AACxD;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAyD;;AAAQ;;AAC3E;;;;;;AAF+B;;AAAA;;;;;;AAI7B;;AAAmC;;AAAK;;;;QDxC7B4C,a;;;AAEX,6BAAoBC,WAApB,EACoB7F,WADpB,EAEoBD,MAFpB,EAEoC;AAAA;;AAAA;;AAFhB,aAAA8F,WAAA,GAAAA,WAAA;AACA,aAAA7F,WAAA,GAAAA,WAAA;AACA,aAAAD,MAAA,GAAAA,MAAA;AAIpB,aAAA+F,eAAA,GAAkB,EAAlB;AACA,aAAAC,KAAA,GAAQ,CAAR;AAIQ,aAAAC,WAAA,GAAc,IAAI,4CAAJ,EAAd;AARN,aAAKC,gBAAL,GAAwB,KAAKjG,WAAL,CAAiBG,WAAjB,CAA6BwE,SAA7B,CAAuC,UAAAuB,IAAI;AAAA,iBAAI,MAAI,CAAC/F,WAAL,GAAmB+F,IAAvB;AAAA,SAA3C,CAAxB;AACD;;;;mCAoBU;AAAA;;AACT,eAAKL,WAAL,CAAiBM,OAAjB,GAA2BxB,SAA3B,CAAqC,UAAAyB,KAAK,EAAI;AAC5C,kBAAI,CAACN,eAAL,GAAuBM,KAAvB;AACD,WAFD;AAIA,eAAKC,GAAL,GAAW,KAAKL,WAAL,CAAiB5E,IAAjB,EACT;AACA,8EAAa,GAAb,CAFS,EAGT;AACA;AACA;AACA;AACA;AACA;AACA,2EAAU,UAACkD,cAAD;AAAA,mBAAoC,MAAI,CAACuB,WAAL,CAAiBjB,MAAjB,CAAwBN,cAAxB,CAApC;AAAA,WAAV,CATS,EAUTK,SAVS,CAUC,UAAA2B,IAAI,EAAI;AAChB,gBAAIA,IAAJ,EAAU;AACR,oBAAM,IAAI9G,KAAJ,EAAN;AACD;AACF,WAdQ,EAeT,UAAA+G,CAAC;AAAA,mBAAI9F,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAJ;AAAA,WAfQ,CAAX;AAgBD;;;sCAEa;AACZ,cAAI,CAAC,KAAKP,WAAV,EAAuB;AACrB,iBAAK0F,WAAL,CAAiBW,cAAjB;AACD;;AACD,eAAKP,gBAAL,CAAsBlB,WAAtB;AACD;;;gDAEuB;AACtB,eAAKgB,KAAL,GAAa,KAAKD,eAAL,CAAqBW,MAArB,CACX,UAACC,IAAD,EAAOC,GAAP;AAAA,mBAAeD,IAAI,GAAGC,GAAG,CAACzC,KAAJ,GAAYyC,GAAG,CAAC7C,YAAtC;AAAA,WADW,EACyC,CADzC,CAAb;AAED;;;+BAEMQ,c,EAAgB;AACrBA,wBAAc,CAACJ,KAAf;AACA0B,uBAAa,CAACgB,aAAd,CAA4BtC,cAA5B;;AACA,cAAI,KAAKnE,WAAT,EAAsB;AACpB,iBAAK6F,WAAL,CAAiB9E,IAAjB,CAAsBoD,cAAtB;AACD;AACF;;;iCAEQA,c,EAAgB;AACvBA,wBAAc,CAACJ,KAAf;AACA0B,uBAAa,CAACgB,aAAd,CAA4BtC,cAA5B;;AACA,cAAI,KAAKnE,WAAT,EAAsB;AACpB,iBAAK6F,WAAL,CAAiB9E,IAAjB,CAAsBoD,cAAtB;AACD;AACF;;;iCAEQA,c,EAAgB;AACvBsB,uBAAa,CAACgB,aAAd,CAA4BtC,cAA5B;;AACA,cAAI,KAAKnE,WAAT,EAAsB;AACpB,iBAAK6F,WAAL,CAAiB9E,IAAjB,CAAsBoD,cAAtB;AACD;AACF;;;+BAGMA,c,EAAgC;AAAA;;AACrC,eAAKuB,WAAL,CAAiBgB,MAAjB,CAAwBvC,cAAxB,EAAwCK,SAAxC,CACE,UAAAmC,OAAO,EAAI;AACT,kBAAI,CAAChB,eAAL,GAAuB,MAAI,CAACA,eAAL,CAAqBiB,MAArB,CAA4B,UAAAxH,CAAC;AAAA,qBAAIA,CAAC,CAACqE,SAAF,KAAgBU,cAAc,CAACV,SAAnC;AAAA,aAA7B,CAAvB;AACAnD,mBAAO,CAACC,GAAR,CAAY,WAAW,MAAI,CAACoF,eAA5B;AACD,WAJH,EAKE,UAAAS,CAAC;AAAA,mBAAI9F,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAJ;AAAA,WALH;AAMD;;;mCAEU;AAAA;;AACT,cAAI,CAAC,KAAKP,WAAV,EAAuB;AACrB,iBAAKJ,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACC,yBAAW,EAAE;AAACC,yBAAS,EAAE,KAAKd,MAAL,CAAYe;AAAxB;AAAd,aAAjC;AACD,WAFD,MAEO,IAAI,KAAKX,WAAL,CAAiBK,IAAjB,KAA0B,gDAAK8B,QAAnC,EAA6C;AAClD,iBAAKvC,MAAL,CAAYY,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACD,WAFM,MAEA;AACL,iBAAKkF,WAAL,CAAiBmB,QAAjB,GAA4BrC,SAA5B,CACE,UAAA4B,CAAC,EAAI;AACH,oBAAI,CAACT,eAAL,GAAuB,EAAvB;AACD,aAHH,EAIE,UAAAmB,MAAM,EAAI;AACRxG,qBAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,aANH;AAOA,iBAAKX,MAAL,CAAYY,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AAEF;;;sCA9FoB2D,c,EAAgB;AACnC,cAAM4C,GAAG,GAAG5C,cAAc,CAACP,YAA3B;;AACA,cAAIO,cAAc,CAACJ,KAAf,GAAuBgD,GAA3B,EAAgC;AAC9B5C,0BAAc,CAACJ,KAAf,GAAuBgD,GAAvB;AACD,WAFD,MAEO,IAAI5C,cAAc,CAACJ,KAAf,GAAuB,CAA3B,EAA8B;AACnCI,0BAAc,CAACJ,KAAf,GAAuB,CAAvB;AACD;;AACDzD,iBAAO,CAACC,GAAR,CAAY4D,cAAc,CAACJ,KAA3B;AACD;;;;;;;uBAxBU0B,a,EAAa,mI,EAAA,mI,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,koB;AAAA;AAAA;ACf1B;;AAA0C;;AAAS;;AAGnD;;AACE;;AACA;;AACE;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAM;;AAExB;;AACA;;AACA;;AAEA;;AA8BA;;AACF;;AAEA;;AAIA;;;;;;AArCM;;AAAA;;AAiCD;;AAAA,kJAA+C,UAA/C,EAA+C,IAA/C;;;;;;;;;;sEDnCQA,a,EAAa;cALzB,uDAKyB;eALf;AACT9C,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEf1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGE;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;QDEWmE,c;;;AAaX,8BAAoBnH,WAApB,EACoBD,MADpB,EAEoBE,KAFpB,EAE2C;AAAA;;AAFvB,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAD,MAAA,GAAAA,MAAA;AACA,aAAAE,KAAA,GAAAA,KAAA;AAXpB,aAAAmH,SAAA,GAAY,KAAZ;AACA,aAAAC,KAAA,GAAa;AACXC,kBAAQ,EAAE,EADC;AAEXC,kBAAQ,EAAE,EAFC;AAGXC,oBAAU,EAAE;AAHD,SAAb;AAMA,aAAA3G,SAAA,GAAY,GAAZ;AAKC;;;;mCAEU;AACT,cAAIiE,MAAM,GAAG,KAAK7E,KAAL,CAAW+E,QAAX,CAAoBC,aAAjC;AACA,eAAKwC,QAAL,GAAgB3C,MAAM,CAAC4C,GAAP,CAAW,QAAX,CAAhB;AACA,eAAK7G,SAAL,GAAiBiE,MAAM,CAACI,GAAP,CAAW,WAAX,CAAjB;AACD;;;mCAEU;AAAA;;AACT,eAAKkC,SAAL,GAAiB,IAAjB;AACA,eAAKpH,WAAL,CAAiB2H,KAAjB,CAAuB,KAAKN,KAA5B,EAAmC1C,SAAnC,CACE,UAAAuB,IAAI,EAAI;AACN,gBAAIA,IAAJ,EAAU;AACR,kBAAIA,IAAI,CAAC1F,IAAL,IAAa,gDAAK8B,QAAtB,EAAgC;AAC9B,sBAAI,CAACzB,SAAL,GAAiB,SAAjB;AACD;;AAED,oBAAI,CAACd,MAAL,CAAY6H,aAAZ,CAA0B,MAAI,CAAC/G,SAA/B;AACD,aAND,MAMO;AACL,oBAAI,CAAC4G,QAAL,GAAgB,KAAhB;AACA,oBAAI,CAACI,SAAL,GAAiB,IAAjB;AACD;AAEF,WAbH;AAeD;;;wCAEeC,C,EAAGC,C,EAAG;AACpB,eAAKV,KAAL,CAAWC,QAAX,GAAsBQ,CAAtB;AACA,eAAKT,KAAL,CAAWE,QAAX,GAAsBQ,CAAtB;AACA,eAAKC,QAAL;AACD;;;;;;;uBA/CUb,c,EAAc,mI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,ooC;AAAA;AAAA;ACV3B;;AAA0C;;AAAO;;AACjD;;AAEE;;AAGA;;AAKA;;AAAqB;AAAA,mBAAY,IAAAa,QAAA,EAAZ;AAAsB,WAAtB;;AACnB;;AACE;;AAAO;;AAAa;;AACpB;;AAC0B;AAAA;AAAA;;AAD1B;;AAEA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAO;;AAAQ;;AACf;;AACuC;AAAA;AAAA;;AADvC;;AAEA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAA2D;AAAA;AAAA;;AAA3D;;AACA;;AAAwC;;AAAW;;AACnD;;AAA8C;;AAAO;;AACvD;;AACF;;AAEA;;AACE;;AAA6F;;AAAO;;AACtG;;AACF;;AAGA;;AAAQ;;AAAY;;AACpB;;AACE;;AACE;;AAAI;;AACF;AAAA,mBAAS,IAAAC,eAAA,CAAgB,oBAAhB,EAAqC,KAArC,CAAT;AAAoD,WAApD;;AAC0B;;AAAS;;AAAI;;AAC3C;;AACF;;AAEF;;;;;;;;;;AAlDkC;;AAAA;;AAGF;;AAAA;;AASA;;AAAA;;AACrB;;AAAA;;AAQkC;;AAAA;;AAClC;;AAAA;;AAOwD;;AAAA;;AAOrD;;AAAA;;;;;;;;;sED7BDd,c,EAAc;cAL1B,uDAK0B;eALhB;AACTrE,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcE;;AACE;;AACE;;AAAwD;;AAAxD;;AAEF;;AACA;;AAAyB;;AAAwD;;AAAoB;;AAAI;;AACzG;;AAAyB;;AAA2B;;AACpD;;AAAyB;;;;AAAgC;;AACzD;;AAAyB;;AAAc;;AACvC;;AAAyB;;;;AAA+C;;AAC1E;;;;;;AARO;;AAAA;;AAAyE;;AAAA;;AACf;;AAEnC;;AAAA;;AAAqD;;AAAA;;AACxD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDZhBkF,oB;;;AAEX,oCAAoBC,YAApB,EACoBlI,KADpB,EAC2C;AAAA;;AADvB,aAAAkI,YAAA,GAAAA,YAAA;AACA,aAAAlI,KAAA,GAAAA,KAAA;AACnB;;;;mCAIU;AACT;AACA;AACA;AACA;AACA,eAAKmI,MAAL,GAAc,KAAKD,YAAL,CAAkBE,IAAlB,CAAuB,KAAKpI,KAAL,CAAW+E,QAAX,CAAoBsD,QAApB,CAA6BpD,GAA7B,CAAiC,IAAjC,CAAvB,CAAd;AACD;;;;;;;uBAdUgD,oB,EAAoB,qI,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,mT;AAAA;AAAA;ACXjC;;AAA0C;;AAAY;;AACtD;;AACE;;AACA;;AACE;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAW;;AAC3B;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAQ;;AAE1B;;AACA;;AACA;;AACA;;;;AAWA;;AACF;;AACA;;AAAgD;;;;;;AAAmD;;;;;;;;AAb7F;;AAAA;;AAa0C;;AAAA;;;;;;;;;;sEDhBnCA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTpF,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8BM;;AAGE;;AAAI;;;;;;AADe;;;;;;;;AAErB;;AAAyD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AAAM;;;;;;;;AACvG;;AAEG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAED;;AAAM;;;;;;AArBZ;;AACE;;AACE;;AACF;;AACA;;AAAyB;;AAAmB;;AAC5C;;AAAyB;;AAAoB;;AAC7C;;AAAyB;;AAAoB;;AAC7C;;AAAyB;;AAAsB;;AAC/C;;AAAyB;;;;AAAgC;;AACzD;;AAAyB;;;;AAA2B;;AACpD;;AAAyB;;AAAkC;;AAC3D;;AACE;;AAIA;;AACA;;AAKF;;AACF;;;;;;;;AArBI;;AAAA;;AAEuB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEpB;;AAAA;;AAIA;;AAAA;;AACA;;AAAA;;;;QDnBIuF,c;;;AAOX,8BAAoBC,UAApB,EACoBL,YADpB,EAEoBnI,WAFpB,EAGoBC,KAHpB,EAGyC;AAAA;;AAHrB,aAAAuI,UAAA,GAAAA,UAAA;AACA,aAAAL,YAAA,GAAAA,YAAA;AACA,aAAAnI,WAAA,GAAAA,WAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AAPpB,aAAAsD,WAAA,GAAc,6DAAd;AAEA,aAAAC,IAAA,GAAO,+CAAP;AAOC;;;;mCAIU;AAAA;;AACT,eAAKrD,WAAL,GAAmB,KAAKH,WAAL,CAAiBI,gBAApC;AACA,eAAKsE,QAAL,GAAgB,KAAKzE,KAAL,CAAWW,WAAX,CAAuB+D,SAAvB,CAAiC,YAAM;AACrD,kBAAI,CAACC,MAAL;AACD,WAFe,CAAhB;AAID;;;iCAEQ;AAAA;;AACP,cAAI6D,QAAQ,GAAG,CAAf;AACA,cAAIrD,IAAI,GAAG,EAAX;;AACA,cAAI,KAAKnF,KAAL,CAAW+E,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,MAAtC,CAAJ,EAAmD;AACjDuD,oBAAQ,GAAG,CAAC,KAAKxI,KAAL,CAAW+E,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,MAAtC,CAAZ;AACAE,gBAAI,GAAG,CAAC,KAAKnF,KAAL,CAAW+E,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,MAAtC,CAAR;AACD;;AACD,eAAKiD,YAAL,CAAkBO,OAAlB,CAA0BD,QAA1B,EAAoCrD,IAApC,EAA0CT,SAA1C,CAAoD,UAAAW,IAAI;AAAA,mBAAI,OAAI,CAACA,IAAL,GAAYA,IAAhB;AAAA,WAAxD,EAA8E,UAAAiB,CAAC,EAAI;AACjF9F,mBAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,WAFD;AAGD;;;+BAGMiI,K,EAAc;AACnB,eAAKR,YAAL,CAAkBS,MAAlB,CAAyBD,KAAK,CAACE,OAA/B,EAAwClE,SAAxC,CAAkD,UAAAmE,GAAG,EAAI;AACvD,gBAAIA,GAAJ,EAAS;AACPH,mBAAK,CAACI,WAAN,GAAoBD,GAAG,CAACC,WAAxB;AACD;AACF,WAJD;AAKD;;;+BAEMJ,K,EAAc;AACnB,eAAKR,YAAL,CAAkBa,MAAlB,CAAyBL,KAAK,CAACE,OAA/B,EAAwClE,SAAxC,CAAkD,UAAAmE,GAAG,EAAI;AACvD,gBAAIA,GAAJ,EAAS;AACPH,mBAAK,CAACI,WAAN,GAAoBD,GAAG,CAACC,WAAxB;AACD;AACF,WAJD;AAKD;;;sCAEU;AACT,eAAKrE,QAAL,CAAcK,WAAd;AACD;;;;;;;uBAvDUwD,c,EAAc,gI,EAAA,qI,EAAA,mI,EAAA,+H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,2e;AAAA;AAAA;AChB3B;;AAA0C;;AAAM;;AAEhD;;AACE;;AACA;;AACE;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAa;;AAC7B;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAgB;;AAChC;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAM;;AACxB;;AACA;;AACA;;AAEA;;AAwBA;;AACF;;AAEA;;;;AA3BM;;AAAA;;AA2BU;;AAAA;;;;;;;;;;sED7BHA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTzF,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkCU;;AAEC;;AACD;;;;;;;;AAHsB;;;;;;AAIC;;AAA6C;;AAAW;;;;QDzB5EiG,e;;;AAKX,+BACUxE,cADV,EAEUoB,WAFV,EAGUqD,aAHV,EAIUjJ,KAJV,EAKUF,MALV,EAKwB;AAAA;;AAJd,aAAA0E,cAAA,GAAAA,cAAA;AACA,aAAAoB,WAAA,GAAAA,WAAA;AACA,aAAAqD,aAAA,GAAAA,aAAA;AACA,aAAAjJ,KAAA,GAAAA,KAAA;AACA,aAAAF,MAAA,GAAAA,MAAA;AAET;;;;mCAEU;AACT,eAAKoJ,UAAL;AACA,eAAKtG,KAAL,GAAa,gBAAb;AACA,eAAKqB,KAAL,GAAa,CAAb;AACD,S,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;;;;qCAEU;AAAA;;AACR,cAAMrE,EAAE,GAAG,KAAKI,KAAL,CAAW+E,QAAX,CAAoBsD,QAApB,CAA6BpD,GAA7B,CAAiC,IAAjC,CAAX;AACA,eAAKT,cAAL,CAAoB2E,SAApB,CAA8BvJ,EAA9B,EAAkC8E,SAAlC,CACE,UAAA2B,IAAI,EAAI;AACN,mBAAI,CAAC5C,WAAL,GAAmB4C,IAAnB;AACD,WAHH,EAIE,UAAAC,CAAC;AAAA,mBAAI9F,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAJ;AAAA,WAJH;AAMD;;;oCAEW;AAAA;;AACV,eAAKmF,WAAL,CACGwD,OADH,CACW,IAAI,qEAAJ,CAAmB,KAAK3F,WAAxB,EAAqC,KAAKQ,KAA1C,CADX,EAEGS,SAFH,CAGI,UAAAmE,GAAG,EAAI;AACL,gBAAI,CAACA,GAAL,EAAU;AACRrI,qBAAO,CAACC,GAAR,CAAY,oBAAoBoI,GAAhC;AACA,oBAAM,IAAItJ,KAAJ,EAAN;AACD;;AACD,mBAAI,CAACO,MAAL,CAAY6H,aAAZ,CAA0B,OAA1B;AACD,WATL,EAUI,UAAArB,CAAC;AAAA,mBAAI9F,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAJ;AAAA,WAVL;AAYD;;;wCAEe;AACdD,iBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,cAAMwG,GAAG,GAAG,KAAKxD,WAAL,CAAiBK,YAA7B;;AACA,cAAI,KAAKG,KAAL,GAAagD,GAAjB,EAAsB;AACpB,iBAAKhD,KAAL,GAAagD,GAAb;AACD,WAFD,MAEO,IAAI,KAAKhD,KAAL,GAAa,CAAjB,EAAoB;AACzB,iBAAKA,KAAL,GAAa,CAAb;AACD;AACF;;;;;;;uBA9DU+E,e,EAAe,yI,EAAA,mI,EAAA,iI,EAAA,+H,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,qwB;AAAA;AAAA;ACb5B;;AAA0C;;AAAS;;AACnD;;AACE;;AACE;;AACE;;AACA;;AACE;;AAAwB;;AAA4B;;AACpD;;AAAiC;AAAA,uFAA0C,CAA1C,IAA+C,IAAAK,SAAA,EAA/C;AAA0D,WAA1D;;AAC/B;;AACE;;AACA;;AAAqB;;AAAQ;;AAAa;;AAAS;;AAAmC;;AACtF;;AACE;;AAAQ;;AAAO;;AACf;;AAAkB;;;;AAAwC;;AAC5D;;AACA;;AAAqB;;AAAQ;;AAAO;;AAAS;;AAA6B;;AAE1E;;AACE;;AAAQ;;AAAU;;AAClB;;AAAO;AAAA;AAAA,aAAiB,QAAjB,EAAiB;AAAA,mBACP,IAAA1C,aAAA,EADO;AACQ,WADzB;;AAAP;;AAQF;;AAGA;;AAAqB;;AAAQ;;AAAU;;AACrC;;AAAqB;;;;AAAgD;;AACvE;;AACF;;AACA;;AAIA;;AACF;;AAEF;;AACF;;AACF;;AACF;;;;;;AA5C0C;;AAAA;;AAIG;;AAAA;;AAEb;;AAAA;;AAGW;;AAAA;;AACoB;;AAAA;;AAG/B;;AAAA;;AAEyB;;AAAA;;AAIpC;;AAAA,yFAAiB,KAAjB,EAAiB,6DAAjB;;AAYc;;AAAA;;AAG2B;;AAAA,kJAAsD,UAAtD,EAAsD,IAAtD;;;;;;;;;;sEDrBjDqC,e,EAAe;cAL3B,uDAK2B;eALjB;AACTnG,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUQ;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;;;AAHO;;AAAA;;;;;;AAoBP;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;;;AAHO;;AAAA;;;;;;AAuBH;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;;;AAHO;;AAAA;;;;;;AAgBL;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;;;AAHO;;AAAA;;;;QD3DAuG,oB;;;AAIX,oCAAoB9E,cAApB,EACoBxE,KADpB,EAEoBF,MAFpB,EAEoC;AAAA;;AAFhB,aAAA0E,cAAA,GAAAA,cAAA;AACA,aAAAxE,KAAA,GAAAA,KAAA;AACA,aAAAF,MAAA,GAAAA,MAAA;AAJpB,aAAAyJ,OAAA,GAAU,IAAI,+DAAJ,EAAV;AAQA,aAAAC,MAAA,GAAS,KAAT;AAHC;;;;mCAKU;AAAA;;AACT,eAAK7F,SAAL,GAAiB,KAAK3D,KAAL,CAAW+E,QAAX,CAAoBsD,QAApB,CAA6BpD,GAA7B,CAAiC,IAAjC,CAAjB;;AACA,cAAI,KAAKtB,SAAT,EAAoB;AAClB,iBAAK6F,MAAL,GAAc,IAAd;AACA,iBAAKhF,cAAL,CAAoB2E,SAApB,CAA8B,KAAKxF,SAAnC,EAA8Ce,SAA9C,CAAwD,UAAA2B,IAAI;AAAA,qBAAI,OAAI,CAACkD,OAAL,GAAelD,IAAnB;AAAA,aAA5D;AACD;AAEF;;;iCAEQ;AAAA;;AACP,eAAK7B,cAAL,CAAoBG,MAApB,CAA2B,KAAK4E,OAAhC,EAAyC7E,SAAzC,CAAmD,UAAA2B,IAAI,EAAI;AACvD,gBAAI,CAACA,IAAL,EAAW,MAAM,IAAI9G,KAAJ,EAAN;;AACX,mBAAI,CAACO,MAAL,CAAYY,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACD,WAHH,EAIE,UAAAU,GAAG,EAAI,CACN,CALH;AAOD;;;mCAEU;AACT,cAAI,KAAKuC,SAAT,EAAoB;AAClB,iBAAKgB,MAAL;AACD,WAFD,MAEO;AACL,iBAAK8E,GAAL;AACD;AACF;;;8BAEK;AAAA;;AACJ,eAAKjF,cAAL,CAAoBkF,MAApB,CAA2B,KAAKH,OAAhC,EAAyC7E,SAAzC,CAAmD,UAAA2B,IAAI,EAAI;AACvD,gBAAI,CAACA,IAAL,EAAW,MAAM,IAAI9G,KAAJ,EAAN;;AACX,mBAAI,CAACO,MAAL,CAAYY,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,WAHH,EAIE,UAAApB,CAAC,EAAI,CACJ,CALH;AAMD;;;gDAEoB;AACnBkB,iBAAO,CAACC,GAAR,CAAY,KAAK8I,OAAjB;AACD;;;;;;;uBAlDUD,oB,EAAoB,yI,EAAA,+H,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,c;AAAA,klD;AAAA;AAAA;ACVjC;;AAA0C;;AAAY;;AACtD;;AACE;;AAAqB;AAAA,mBAAY,IAAAvB,QAAA,EAAZ;AAAsB,WAAtB;;AAEnB;;AACE;;AAAuB;;AAAI;;AAC3B;;AAA+C;AAAA;AAAA;;AAA/C;;AAGA;;AAKF;;AAEA;;AACE;;AAAO;;AAAU;;AACjB;;AAAO;AAAA;AAAA;;AAAP;;AAEF;;AAGA;;AACE;;AAAO;;AAAI;;AACX;;AAAO;AAAA;AAAA;;AAAP;;AAGF;;AACA;;AAOA;;AACE;;AAAO;;AAAW;;AAClB;;AAEoC;AAAA;AAAA;;AAAyC;;AAC/E;;AAEA;;AACE;;AAA0B;;AAAK;;AAC/B;;AAKwC;AAAA;AAAA;;AALxC;;AAOA;;AAKF;;AAEA;;AACE;;AAA0B;;AAAK;;AAC/B;;AAKO;AAAA;AAAA;;AALP;;AAOA;;AAKF;;AAEA;;AACE;;AAA2B;;AAAM;;AACjC;;AACQ;AAAA;AAAA;;AACN;;AAAoB;;AAAS;;AAC7B;;AAAoB;;AAAW;;AACjC;;AACF;;AACA;;AACE;;AAA6F;;AAAM;;AACrG;;AACF;;AAGF;;;;;;;;;;;;;;AAnFa;;AAAA,2FAAmB,UAAnB,EAAmB,UAAnB,EAAmB,SAAnB,EAAmB,qBAAnB;;AAGF;;AAAA;;AASE;;AAAA;;AAOA;;AAAA;;AAIJ;;AAAA;;AAWiC;;AAAA;;AAU7B;;AAAA;;AAEF;;AAAA;;AAcE;;AAAA;;AAEF;;AAAA;;AAUG;;AAAA;;AACE;;AAAA;;AACA;;AAAA;;AAIY;;AAAA;;;;;;;;;sED1EfuB,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTzG,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCA;;AAC6D;;AAA6B;;AAAG;;AAC7F;;;;;;;;AA8BM;;AACG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AAAM;;;;;;AAhBZ;;AACE;;AACE;;AACF;;AACA;;AAAyB;;AAAyB;;AAClD;;AAAyB;;AAA2B;;AACpD;;AAAyB;;AAAkC;;AAC3D;;AAAyB;;;;AAAuC;;AAChE;;AAAyB;;AAA4B;;AAErD;;AACE;;AACE;;AAAI;;AAEN;;AAGF;;AAEF;;;;;;;;AAjBwB;;AAAA;;AAAkC;;AAE/B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGG;;AAAA;;AAGvB;;AAAA;;;;QDnBI4G,oB;;;AAEX,oCAAoB5J,WAApB,EACoByE,cADpB,EAEoBxE,KAFpB,EAE2C;AAAA;;AAFvB,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAyE,cAAA,GAAAA,cAAA;AACA,aAAAxE,KAAA,GAAAA,KAAA;AAGpB,aAAAuD,IAAA,GAAO,+CAAP;AAFC;;;;mCAQU;AAAA;;AACT,eAAKkB,QAAL,GAAgB,KAAKzE,KAAL,CAAWW,WAAX,CAAuB+D,SAAvB,CAAiC,YAAM;AACrD,mBAAI,CAACC,MAAL;AACD,WAFe,CAAhB;AAGD;;;sCAEU;AACT,eAAKF,QAAL,CAAcK,WAAd;AACD;;;iCAEQ;AACP,cAAI,KAAK9E,KAAL,CAAW+E,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,MAAtC,CAAJ,EAAmD;AACjD,gBAAMC,WAAW,GAAG,CAAC,KAAKlF,KAAL,CAAW+E,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,MAAtC,CAArB;AACA,gBAAME,IAAI,GAAG,CAAC,KAAKnF,KAAL,CAAW+E,QAAX,CAAoBC,aAApB,CAAkCC,GAAlC,CAAsC,MAAtC,CAAd;AACA,iBAAKG,QAAL,CAAcF,WAAd,EAA2BC,IAA3B;AACD,WAJD,MAIO;AACL,iBAAKC,QAAL;AACD;AACF;;;mCAE4C;AAAA;;AAAA,cAApCC,IAAoC,uEAArB,CAAqB;AAAA,cAAlBF,IAAkB,uEAAH,CAAG;AAC3C,eAAKX,cAAL,CAAoBe,YAApB,CAAiC,CAACF,IAAlC,EAAwC,CAACF,IAAzC,EACGT,SADH,CACa,UAAAW,IAAI,EAAI;AACjB,mBAAI,CAACA,IAAL,GAAYA,IAAZ;AACD,WAHH;AAKD;;;+BAGMuE,Y,EAA6BnG,W,EAAa;AAC/C,eAAKe,cAAL,CAAoBqF,OAApB,CAA4BpG,WAA5B,EAAyCiB,SAAzC,CAAmD,UAAA4B,CAAC,EAAI;AACpDsD,wBAAY,GAAGA,YAAY,CAAC9C,MAAb,CAAoB,UAAAxH,CAAC;AAAA,qBAAIA,CAAC,CAACqE,SAAF,IAAeF,WAAnB;AAAA,aAArB,CAAf;AACD,WAFH,EAGE,UAAArC,GAAG,EAAI,CACN,CAJH;AAKD;;;;;;;uBAhDUuI,oB,EAAoB,mI,EAAA,yI,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,6C;AAAA,gB;AAAA,e;AAAA,a;AAAA,grB;AAAA;AAAA;ACdjC;;AAAsC;;AAAQ;;AAC9C;;AAGA;;AACE;;AACA;;AACE;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAW;;AAC3B;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAM;;AACxB;;AACA;;AACA;;AACA;;AADA;;AAqBF;;AACA;;;;AAvCG;;AAAA;;AAkBG;;AAAA;;AAqBU;;AAAA;;;;;;;;;;sED1BHA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT9G,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEdjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQQ;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAUL;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAUL;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAUL;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;;;AAHO;;AAAA;;;;;;AAUL;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;;;AAHO;;AAAA;;;;QD/CA+G,e;;;AAIX,+BAAoBC,QAApB,EACoBhK,WADpB,EAEoBD,MAFpB,EAEoC;AAAA;;AAFhB,aAAAiK,QAAA,GAAAA,QAAA;AACA,aAAAhK,WAAA,GAAAA,WAAA;AACA,aAAAD,MAAA,GAAAA,MAAA;AAClB,aAAKmG,IAAL,GAAY,IAAI,iDAAJ,EAAZ;AAED;;;;mCAGU,CAGV;;;mCAEU;AAAA;;AACT,eAAKlG,WAAL,CAAiBiK,MAAjB,CAAwB,KAAK/D,IAA7B,EAAmCvB,SAAnC,CAA6C,UAAAmD,CAAC,EAAI;AAC9C,mBAAI,CAAC/H,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,WAFH,EAGE,UAAApB,CAAC,EAAI,CACJ,CAJH;AAKD;;;;;;;uBAvBUwK,e,EAAe,gEAIIG,QAJJ,C,EAIY,mI,EAAA,uH;AAAA,K;;;YAJ3BH,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,wtC;AAAA;AAAA;ACV5B;;AAA0C;;AAAO;;AACjD;;AACE;;AAAqB;AAAA,mBAAY,IAAA/B,QAAA,EAAZ;AAAsB,WAAtB;;AACnB;;AACE;;AAAO;;AAAG;;AAAa;;AAAI;;AAC3B;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AAQF;;AACA;;AACE;;AAAO;;AAAG;;AAAI;;AAAI;;AAClB;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AAQF;;AACA;;AACE;;AAAO;;AAAG;;AAAQ;;AAAI;;AACtB;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AAQF;;AACA;;AACE;;AAAO;;AAAG;;AAAK;;AAAI;;AACnB;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AAKF;;AACA;;AACE;;AAAO;;AAAG;;AAAO;;AAAI;;AACrB;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AAKF;;AACA;;AACE;;AAA6F;;AAAO;;AACtG;;AACF;;AACF;;;;;;;;;;;;;;;;AA7Da;;AAAA;;AAEF;;AAAA;;AAWE;;AAAA;;AAEF;;AAAA;;AAWE;;AAAA;;AAEF;;AAAA;;AAWE;;AAAA;;AAEF;;AAAA;;AAQE;;AAAA;;AAEF;;AAAA;;AAO0D;;AAAA;;;;;;;;;sEDrDxD+B,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjH,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;gBAIIkH;WAAQ;AAAA;AAAA,S,EAAA;AAAA;AAAA,S;AAAA,O,EAAA,I;AAAA,K;;;;;;;;;;;;;;;;;AEdxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaQ;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAUL;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAUL;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;;;AAHO;;AAAA;;;;;;AAUL;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;;;AAHO;;AAAA;;;;QDtCAC,mB;;;AAEX,mCAAoBnK,WAApB,EACoBD,MADpB,EACoC;AAAA;;AADhB,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAD,MAAA,GAAAA,MAAA;AAGpB,aAAAmG,IAAA,GAAO,IAAI,iDAAJ,EAAP;AAFC;;;;mCAKU;AAAA;;AACT,cAAMkE,OAAO,GAAG,KAAKpK,WAAL,CAAiBI,gBAAjB,CAAkCgK,OAAlD;AAEA,eAAKpK,WAAL,CAAiBkF,GAAjB,CAAqBkF,OAArB,EAA8BzF,SAA9B,CAAwC,UAAAmD,CAAC,EAAI;AAC3C,mBAAI,CAAC5B,IAAL,GAAY4B,CAAZ;AACA,mBAAI,CAAC5B,IAAL,CAAUqB,QAAV,GAAqB,EAArB;AACD,WAHD,EAGG,UAAAhI,CAAC,EAAI,CAEP,CALD;AAMD;;;mCAEU;AAAA;;AACT,eAAKS,WAAL,CAAiB4E,MAAjB,CAAwB,KAAKsB,IAA7B,EAAmCvB,SAAnC,CAA6C,UAAAmD,CAAC,EAAI;AAChD,mBAAI,CAAC9H,WAAL,CAAiBqK,SAAjB,CAA2BnJ,IAA3B,CAAgC4G,CAAC,CAACwC,IAAlC;;AACA,gBAAIxJ,GAAG,GAAG,GAAV;;AACA,gBAAI,OAAI,CAACoF,IAAL,CAAU1F,IAAV,IAAkB,gDAAK8B,QAA3B,EAAqC;AACnCxB,iBAAG,GAAG,SAAN;AACD;;AACD,mBAAI,CAACf,MAAL,CAAY6H,aAAZ,CAA0B9G,GAA1B;AACD,WAPD,EAOG,UAAAyF,CAAC,EAAI,CACP,CARD;AASD;;;;;;;uBA9BU4D,mB,EAAmB,mI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,krC;AAAA;AAAA;ACXhC;;AAA0C;;AAAa;;AACvD;;AACE;;AAAqB;AAAA,mBAAY,IAAAnC,QAAA,EAAZ;AAAsB,WAAtB;;AACnB;;AACE;;AAAO;;AAAG;;AAAa;;AAAI;;AAC3B;;AAEF;;AACA;;AACE;;AAAO;;AAAG;;AAAI;;AAAI;;AAClB;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AAQF;;AACA;;AACE;;AAAO;;AAAG;;AAAQ;;AAAI;;AACtB;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AAQF;;AACA;;AACE;;AAAO;;AAAG;;AAAK;;AAAI;;AACnB;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AAKF;;AACA;;AACE;;AAAO;;AAAG;;AAAO;;AAAI;;AACrB;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AAKF;;AACA;;AACE;;AAA6F;;AAAM;;AACrG;;AACF;;AACF;;;;;;;;;;;;;;AArDsB;;AAAA;;AAKT;;AAAA;;AAEF;;AAAA;;AAWE;;AAAA;;AAEF;;AAAA;;AAWE;;AAAA;;AAEF;;AAAA;;AAQE;;AAAA;;AAEF;;AAAA;;AAO0D;;AAAA;;;;;;;;;sED5CxDmC,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTrH,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYI;;AAEE;;AAEE;;AACF;;AACA;;AAEE;;AACF;;AACA;;AAEE;;AACF;;AACA;;AAEE;;AACF;;AAEF;;;;;;AAGE;;AAEE;;AACA;;AACF;;;;;;;;;;;;;;AAEA;;AACE;;AACE;;AACA;;AACF;;AACA;;AACE;;AACF;;AACA;;AAA8B;AAAA;;AAAA;;AAAA;AAAA;;AAC5B;;AACF;;AACF;;;;;;AALI;;AAAA;;AAEmE;;AAAA;;;;;;AAKrE;;AACE;;AACF;;AACA;;AACE;;AACF;;;;QD9CKuH,mB;;;AAUX,mCAAoBvK,WAApB,EACoBD,MADpB,EACkC;AAAA;;AADd,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAD,MAAA,GAAAA,MAAA;AAJpB,aAAAyK,IAAA,GAAO,GAAP;AACA,aAAAhH,IAAA,GAAO,+CAAP;AAMC;;;;mCAGU;AAAA;;AACT,eAAKiH,KAAL,GAAa,KAAKzK,WAAL,CAAiByK,KAAjB,CAAuB9F,SAAvB,CAAiC,UAAA+F,KAAK;AAAA,mBAAI,OAAI,CAACJ,IAAL,GAAYI,KAAhB;AAAA,WAAtC,CAAb;AACA,eAAKC,uBAAL,GAA+B,KAAK3K,WAAL,CAAiBG,WAAjB,CAA6BwE,SAA7B,CAAuC,UAAAuB,IAAI,EAAI;AAC5E,mBAAI,CAAC/F,WAAL,GAAmB+F,IAAnB;;AACA,gBAAI,CAACA,IAAD,IAASA,IAAI,CAAC1F,IAAL,IAAa,gDAAK8B,QAA/B,EAAyC;AACvC,qBAAI,CAACkI,IAAL,GAAY,GAAZ;AACD,aAFD,MAEO;AACL,qBAAI,CAACA,IAAL,GAAY,SAAZ;AACD;AACF,WAP8B,CAA/B;AAQD;;;sCAEU;AACT,eAAKG,uBAAL,CAA6B5F,WAA7B,GADS,CAET;AACD;;;iCAEQ;AACP,eAAK/E,WAAL,CAAiBuB,MAAjB,GADO,CAEP;AACD;;;;;;;uBArCUgJ,mB,EAAmB,mI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,a;AAAA,0yC;AAAA;AAAA;ACZhC;;AACE;;AACE;;AACA;;AACF;;AAEA;;AAEE;;AACF;;AACA;;AAEE;;AAqBA;;AACE;;AAMA;;AAYA;;AAQF;;AACF;;AACF;;;;;;AA7D0B;;AAAA;;AAWE;;AAAA;;AAsBnB;;AAAA;;AAMW;;AAAA,4FAAgC,UAAhC,EAAgC,KAAhC;;;;;;;;;sED5BPA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTzH,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACGI;;AACE;;AAIC;;AAAQ;;AAEX;;;;;;AAJI;;AAAA,sJAAqB,aAArB,EAAqB,iMAArB;;;;;;AAMF;;AAAgC;;AAAqB;;AAAQ;;AAAI;;;;;;AAIjE;;AACE;;AAGC;;AAAW;;AAEd;;;;;;;;AAHK;;AAAA;;AACF;;AAAA;;;;;;AAID;;AAIE;;AAAoC;;AAAW;;AACjD;;;;;;AADsC;;AAAA;;;;;;AAb1C;;AACE;;AAOA;;AAQF;;;;;;;;;;AAfwB;;AAAA,qIAA2D,UAA3D,EAA2D,IAA3D;;;;;;AAiBxB;;AAIE;;AAOC;;AAAI;;AAEP;;;;;;AAPI;;AAAA,sJAAqB,aAArB,EAAqB,2MAArB;;;;;;AASF;;AAAgC;;AAAqB;;AAAI;;AAAI;;;;;;AA/CjE;;AAEE;;AAQA;;AAIA;;AAkBA;;AAcA;;AAGF;;;;;;;;;;AA/CwB;;AAAA,8IAA0C,UAA1C,EAA0C,IAA1C;;AAYR;;AAAA;;AAoBZ;;AAAA,oNAAoE,UAApE,EAAoE,IAApE;;;;;;QD3BO4H,mB;;;AAKX,qCAAc;AAAA;AACb;;;;mCAEU,CACV;;;kCAEc;AAAA,cAAPC,CAAO,uEAAH,CAAG;AACb,iBAAO,IAAIC,KAAJ,CAAUD,CAAV,CAAP;AACD;;;;;;;uBAbUD,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,qC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,sgB;AAAA;AAAA;ACRhC;;AACE;;AAkDA;;AAGF;;;;;;AArD6C;;AAAA,4FAAgC,UAAhC,EAAgC,GAAhC;;;;;;;;;sEDOhCA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT9H,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;gBAE7B;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAea+H,W;;;AAgBX,2BAAoBC,IAApB,EACoB9B,aADpB,EAEoBlJ,WAFpB,EAE8C;AAAA;;AAAA;;AAF1B,aAAAgL,IAAA,GAAAA,IAAA;AACA,aAAA9B,aAAA,GAAAA,aAAA;AACA,aAAAlJ,WAAA,GAAAA,WAAA;AAfZ,aAAAiL,OAAA,aAAa,gEAAb;AAER,aAAAC,QAAA,GAAW,EAAX;AAcE,aAAKC,YAAL,GAAoB,IAAI,oDAAJ,CAA4B,IAA5B,CAApB;AACA,aAAKC,KAAL,GAAa,KAAKD,YAAL,CAAkBE,YAAlB,EAAb;AACA,aAAKC,YAAL,GAAoB,IAAI,oDAAJ,CAA4B,IAA5B,CAApB;AACA,aAAKvF,KAAL,GAAa,KAAKuF,YAAL,CAAkBD,YAAlB,EAAb;AACA,aAAKrL,WAAL,CAAiBG,WAAjB,CAA6BwE,SAA7B,CAAuC,UAAAuB,IAAI;AAAA,iBAAI,OAAI,CAAC/F,WAAL,GAAmB+F,IAAvB;AAAA,SAA3C;AAGD;;;;uCAEmB;AAClB,cAAI,KAAKgD,aAAL,CAAmBqC,KAAnB,CAAyB,MAAzB,CAAJ,EAAsC;AACpC,iBAAKL,QAAL,GAAgBM,IAAI,CAACC,KAAL,CAAW,KAAKvC,aAAL,CAAmBhE,GAAnB,CAAuB,MAAvB,CAAX,CAAhB;AACA,mBAAOwG,MAAM,CAACC,MAAP,CAAc,KAAKT,QAAnB,CAAP;AACD,WAHD,MAGO;AACL,iBAAKA,QAAL,GAAgB,EAAhB;AACA,mBAAO,EAAP;AACD;AACF;;;kCAEM;AAAA;;AACL,cAAMU,SAAS,GAAG,KAAKC,YAAL,EAAlB;;AACA,cAAI,KAAK1L,WAAT,EAAsB;AACpB,gBAAIyL,SAAS,CAACrG,MAAV,GAAmB,CAAvB,EAA0B;AACxB,qBAAO,KAAKyF,IAAL,CAAUc,IAAV,CAAqB,KAAKb,OAA1B,EAAmCW,SAAnC,EAA8CxK,IAA9C,CACL,2DAAI,UAAAmF,CAAC,EAAI;AACP,uBAAI,CAACwF,cAAL;AACD,eAFD,CADK,EAIL,2DAAI,UAAAC,IAAI;AAAA,uBAAIA,IAAI,CAACC,QAAT;AAAA,eAAR,CAJK,EAKL,kEAAW,UAAA1F,CAAC;AAAA,uBAAI,gDAAG,EAAH,CAAJ;AAAA,eAAZ,CALK,CAAP;AAOD,aARD,MAQO;AACL,qBAAO,KAAKyE,IAAL,CAAU9F,GAAV,CAAoB,KAAK+F,OAAzB,EAAkC7J,IAAlC,CACL,2DAAI,UAAA4K,IAAI;AAAA,uBAAIA,IAAI,CAACC,QAAT;AAAA,eAAR,CADK,EAEL,kEAAW,UAAA1F,CAAC;AAAA,uBAAI,gDAAG,EAAH,CAAJ;AAAA,eAAZ,CAFK,CAAP;AAID;AACF,WAfD,MAeO;AACL,mBAAO,gDAAGqF,SAAH,CAAP;AACD;AACF;;;gCAEOtH,c,EAAc;AACpB,cAAI,CAAC,KAAKnE,WAAV,EAAuB;AACrB,gBAAI,KAAK+I,aAAL,CAAmBqC,KAAnB,CAAyB,MAAzB,CAAJ,EAAsC;AACpC,mBAAKL,QAAL,GAAgBM,IAAI,CAACC,KAAL,CAAW,KAAKvC,aAAL,CAAmBhE,GAAnB,CAAuB,MAAvB,CAAX,CAAhB;AACD;;AACD,gBAAI,CAAC,KAAKgG,QAAL,CAAc5G,cAAc,CAACV,SAA7B,CAAL,EAA8C;AAC5C,mBAAKsH,QAAL,CAAc5G,cAAc,CAACV,SAA7B,IAA0CU,cAA1C;AACD,aAFD,MAEO;AACL,mBAAK4G,QAAL,CAAc5G,cAAc,CAACV,SAA7B,EAAwCM,KAAxC,IAAiDI,cAAc,CAACJ,KAAhE;AACD;;AACD,iBAAKgF,aAAL,CAAmBgD,GAAnB,CAAuB,MAAvB,EAA+BV,IAAI,CAACW,SAAL,CAAe,KAAKjB,QAApB,CAA/B;AACA,mBAAO,gDAAG,IAAH,CAAP;AACD,WAXD,MAWO;AACL,gBAAMpK,GAAG,aAAM,KAAKmK,OAAX,SAAT;AACA,mBAAO,KAAKD,IAAL,CAAUc,IAAV,CAAwBhL,GAAxB,EAA6B;AAClC,0BAAYwD,cAAc,CAACJ,KADO;AAElC,2BAAaI,cAAc,CAACV;AAFM,aAA7B,CAAP;AAID;AACF;;;+BAEMU,c,EAAc;AAEnB,cAAI,KAAKnE,WAAT,EAAsB;AACpB,gBAAMW,GAAG,aAAM,KAAKmK,OAAX,cAAsB3G,cAAc,CAACV,SAArC,CAAT;AACA,mBAAO,KAAKoH,IAAL,CAAUoB,GAAV,CAA8BtL,GAA9B,EAAmCwD,cAAc,CAACJ,KAAlD,CAAP;AACD;AACF;;;+BAGMI,c,EAAgB;AACrB,cAAI,CAAC,KAAKnE,WAAV,EAAuB;AACrB,mBAAO,KAAK+K,QAAL,CAAc5G,cAAc,CAACV,SAA7B,CAAP;AACA,mBAAO,gDAAG,IAAH,CAAP;AACD,WAHD,MAGO;AACL,gBAAM9C,GAAG,aAAM,KAAKmK,OAAX,cAAsB3G,cAAc,CAACV,SAArC,CAAT;AACA,mBAAO,KAAKoH,IAAL,WAAiBlK,GAAjB,EAAsBM,IAAtB,EAAP;AACD;AACF;;;mCAGO;AACN,cAAMN,GAAG,aAAM,KAAKmK,OAAX,cAAT;AACA,iBAAO,KAAKD,IAAL,CAAUc,IAAV,CAAehL,GAAf,EAAoB,IAApB,EAA0BM,IAA1B,EAAP;AACD;;;yCAEgB;AACf,eAAK8H,aAAL,CAAmBgD,GAAnB,CAAuB,MAAvB,EAA+BV,IAAI,CAACW,SAAL,CAAe,KAAKjB,QAApB,CAA/B;AACD;;;yCAEgB;AACfzK,iBAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,eAAKwI,aAAL,WAA0B,MAA1B;AACA,eAAKgC,QAAL,GAAgB,EAAhB;AACD;;;;;;;uBAlHUH,W,EAAW,uH,EAAA,wH,EAAA,iH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVhK,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACfxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUasL,Y;;;AAIX,4BAAoBrB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFZ,aAAAsB,QAAA,aAAc,gEAAd;AAGP;;;;kCAE0B;AAAA,cAAnBhH,IAAmB,uEAAZ,CAAY;AAAA,cAATF,IAAS,uEAAF,EAAE;AACzB,iBAAO,KAAK4F,IAAL,CAAU9F,GAAV,WAAiB,KAAKoH,QAAtB,mBAAuChH,IAAvC,mBAAoDF,IAApD,GAA4DhE,IAA5D,EAAP;AACD;;;6BAEIvB,E,EAAE;AACL,iBAAO,KAAKmL,IAAL,CAAU9F,GAAV,WAAwB,KAAKoH,QAA7B,cAAyCzM,EAAzC,GAA+CuB,IAA/C,CACL,kEAAW,UAAAmF,CAAC;AAAA,mBAAI,gDAAG,IAAH,CAAJ;AAAA,WAAZ,CADK,CAAP;AAGD;;;+BAEM1G,E,EAAE;AACP,iBAAO,KAAKmL,IAAL,CAAUuB,KAAV,WAA0B,KAAKD,QAA/B,qBAAkDzM,EAAlD,GAAwD,IAAxD,EAA8DuB,IAA9D,CACL,kEAAW,UAAAmF,CAAC;AAAA,mBAAI,gDAAG,IAAH,CAAJ;AAAA,WAAZ,CADK,CAAP;AAGD;;;+BAEM1G,E,EAAE;AACP,iBAAO,KAAKmL,IAAL,CAAUuB,KAAV,WAA0B,KAAKD,QAA/B,qBAAkDzM,EAAlD,GAAwD,IAAxD,EAA8DuB,IAA9D,CACL,kEAAW,UAAAmF,CAAC;AAAA,mBAAI,gDAAG,IAAH,CAAJ;AAAA,WAAZ,CADK,CAAP;AAGD;;;;;;;uBA3BU8F,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVtL,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUayL,c;;;AAKX,8BAAoBxB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHZ,aAAAyB,UAAA,aAAgB,gEAAhB;AACA,aAAAC,WAAA,aAAiB,gEAAjB;AAGP;;;;qCAEYpH,I,EAAcF,I,EAAY;AACrC,cAAMtE,GAAG,aAAM,KAAK2L,UAAX,mBAA8BnH,IAA9B,mBAA2CF,IAA3C,CAAT;AACA,iBAAO,KAAK4F,IAAL,CAAU9F,GAAV,CAAcpE,GAAd,EACJM,IADI,EAAP;AAID;;;0CAEiBuL,Y,EAAsBrH,I,EAAcF,I,EAAY;AAChE,cAAMtE,GAAG,aAAM,KAAK4L,WAAX,cAA0BC,YAA1B,mBAA+CrH,IAA/C,mBAA4DF,IAA5D,CAAT;AACA,iBAAO,KAAK4F,IAAL,CAAU9F,GAAV,CAAcpE,GAAd,EAAmBM,IAAnB,EAAP;AAGD;;;kCAESvB,E,EAAU;AAClB,cAAMiB,GAAG,aAAM,KAAK2L,UAAX,cAAyB5M,EAAzB,CAAT;AACA,iBAAO,KAAKmL,IAAL,CAAU9F,GAAV,CAA2BpE,GAA3B,EAAgCM,IAAhC,CACL,kEAAW,UAAAmF,CAAC,EAAI;AACd9F,mBAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,mBAAO,gDAAG,IAAI,+DAAJ,EAAH,CAAP;AACD,WAHD,CADK,CAAP;AAMD;;;+BAEMgD,W,EAAwB;AAC7B,cAAM5C,GAAG,aAAM,gEAAN,6BAA+B4C,WAAW,CAACE,SAA3C,UAAT;AACA,iBAAO,KAAKoH,IAAL,CAAUoB,GAAV,CAA2BtL,GAA3B,EAAgC4C,WAAhC,CAAP;AACD;;;+BAEMA,W,EAAwB;AAC7B,cAAM5C,GAAG,aAAM,gEAAN,wBAAT;AACA,iBAAO,KAAKkK,IAAL,CAAUc,IAAV,CAA4BhL,GAA5B,EAAiC4C,WAAjC,CAAP;AACD;;;gCAGOA,W,EAAwB;AAC9B,cAAM5C,GAAG,aAAM,gEAAN,6BAA+B4C,WAAW,CAACE,SAA3C,YAAT;AACA,iBAAO,KAAKoH,IAAL,WAAiBlK,GAAjB,CAAP;AACD;AAGD;;;;;;;;;sCAM4D;AAAA,cAArC8L,SAAqC,uEAAzB,WAAyB;AAAA,cAAZC,MAAY;AAC1D,iBAAO,UAACrL,KAAD,EAA+B;AAEpCf,mBAAO,CAACe,KAAR,CAAcA,KAAd,EAFoC,CAEd;AAEtB;;AACA,mBAAO,gDAAGqL,MAAH,CAAP;AACD,WAND;AAOD;;;;;;;uBAhEUL,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVzL,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa+L,W;;;AAOX,2BAAoB9B,IAApB,EACoB9B,aADpB,EACkD;AAAA;;AAD9B,aAAA8B,IAAA,GAAAA,IAAA;AACA,aAAA9B,aAAA,GAAAA,aAAA;AAJb,aAAAmB,SAAA,GAAY,IAAI,4CAAJ,EAAZ;AACA,aAAAI,KAAA,GAAQ,KAAKJ,SAAL,CAAegB,YAAf,EAAR;AAIL,YAAM0B,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAb;AACA,aAAKC,kBAAL,GAA0B,IAAI,oDAAJ,CAAiC1B,IAAI,CAACC,KAAL,CAAWsB,IAAX,CAAjC,CAA1B;AACA,aAAK5M,WAAL,GAAmB,KAAK+M,kBAAL,CAAwB7B,YAAxB,EAAnB;AACAnC,qBAAa,CAACgD,GAAd,CAAkB,aAAlB,EAAiCa,IAAjC;AACD;;;;8BAOKI,S,EAAS;AAAA;;AACb,cAAMrM,GAAG,aAAM,gEAAN,WAAT;AACA,iBAAO,KAAKkK,IAAL,CAAUc,IAAV,CAA4BhL,GAA5B,EAAiCqM,SAAjC,EAA4C/L,IAA5C,CACL,2DAAI,UAAA8E,IAAI,EAAI;AACV,gBAAIA,IAAI,IAAIA,IAAI,CAACvE,KAAjB,EAAwB;AACtB,qBAAI,CAACuH,aAAL,CAAmBgD,GAAnB,CAAuB,aAAvB,EAAsCV,IAAI,CAACW,SAAL,CAAejG,IAAf,CAAtC;;AACA,kBAAIiH,SAAS,CAAC3F,UAAd,EAA0B;AACxBwF,4BAAY,CAACI,OAAb,CAAqB,aAArB,EAAoC5B,IAAI,CAACW,SAAL,CAAejG,IAAf,CAApC;AACD;;AACDzF,qBAAO,CAACC,GAAR,CAAawF,IAAI,CAACoE,IAAlB;;AACA,qBAAI,CAACD,SAAL,CAAenJ,IAAf,CAAoBgF,IAAI,CAACoE,IAAzB;;AACA,qBAAI,CAAC4C,kBAAL,CAAwBhM,IAAxB,CAA6BgF,IAA7B;;AACA,qBAAOA,IAAP;AACD;AACF,WAXD,CADK,EAaL,kEAAW,KAAKmH,WAAL,CAAiB,cAAjB,EAAiC,IAAjC,CAAX,CAbK,CAAP;AAeD;;;iCAEQ;AACP,eAAKH,kBAAL,CAAwBhM,IAAxB,CAA6B,IAA7B;AACA8L,sBAAY,CAACM,UAAb,CAAwB,aAAxB;AACA,eAAKpE,aAAL,WAA0B,aAA1B;AACD;;;+BAEMhD,I,EAAU;AACf,cAAMpF,GAAG,aAAM,gEAAN,cAAT;AACA,iBAAO,KAAKkK,IAAL,CAAUc,IAAV,CAAqBhL,GAArB,EAA0BoF,IAA1B,CAAP;AACD;;;+BAEMA,I,EAAU;AACf,cAAMpF,GAAG,aAAM,gEAAN,aAAT;AACA,iBAAO,KAAKkK,IAAL,CAAUoB,GAAV,CAAoBtL,GAApB,EAAyBoF,IAAzB,CAAP;AACD;;;4BAEGqH,K,EAAa;AACf,cAAMzM,GAAG,aAAM,gEAAN,sBAAwByM,KAAxB,CAAT;AACA,iBAAO,KAAKvC,IAAL,CAAU9F,GAAV,CAAoBpE,GAApB,CAAP;AACD;AAED;;;;;;;;;sCAM4D;AAAA,cAArC8L,SAAqC,uEAAzB,WAAyB;AAAA,cAAZC,MAAY;AAC1D,iBAAO,UAACrL,KAAD,EAA+B;AAEpCf,mBAAO,CAACC,GAAR,CAAYc,KAAZ,EAFoC,CAEhB;AAEpB;;AACA,mBAAO,gDAAGqL,MAAH,CAAP;AACD,WAND;AAOD;;;4BA3DsB;AACrB,iBAAO,KAAKK,kBAAL,CAAwBM,KAA/B;AACD;;;;;;;uBAjBUV,W,EAAW,uH,EAAA,wH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACV/L,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACZxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM0M,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAGA,QAAMC,MAAM,GAAG,sBAAf;AACP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYD,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBE,eAAzB,CAAyC,yDAAzC,WACS,UAAAvM,GAAG;AAAA,aAAIZ,OAAO,CAACe,KAAR,CAAcH,GAAd,CAAJ;AAAA,KADZ",
  "file": "main-es5.js",
  "sourcesContent": [
    "function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";",
    "import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {UserService} from \"../services/user.service\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const currentUser = this.userService.currentUserValue;\r\n    if (currentUser) {\r\n      // check if route is restricted by role\r\n      if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\r\n        console.log(currentUser.role + \"fail in \" + route.data.roles);\r\n        // role not authorised so redirect to home page\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      }\r\n      // authorised so return true\r\n      return true;\r\n    }\r\n\r\n    console.log(\"Need log in\");\r\n    // not logged in so redirect to login page with the return url{queryParams: {returnUrl: state.url}}\r\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\r\n    return false;\r\n  }\r\n}\r\n",
    "import {Injectable} from \"@angular/core\";\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {UserService} from \"../services/user.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private userService: UserService,\r\n              private router: Router) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(catchError(err => {\r\n      if (err.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n        this.userService.logout();\r\n        this.router.navigate(['/login']);\r\n      }\r\n\r\n      const error = err.error || err.statusText;\r\n      return throwError(error);\r\n    }))\r\n  }\r\n}\r\n",
    "import {Injectable} from \"@angular/core\";\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {UserService} from \"../services/user.service\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n\r\n  constructor(private userService: UserService,\r\n  ) {\r\n\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // add authorization header with jwt token if available\r\n    const currentUser = this.userService.currentUserValue;\r\n    if (currentUser && currentUser.token) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `${currentUser.type} ${currentUser.token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n",
    "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CardComponent} from './pages/card/card.component';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {AuthGuard} from \"./_guards/auth.guard\";\nimport {OrderComponent} from \"./pages/order/order.component\";\nimport {OrderDetailComponent} from \"./pages/order-detail/order-detail.component\";\nimport {ProductListComponent} from \"./pages/product-list/product.list.component\";\nimport {UserDetailComponent} from \"./pages/user-edit/user-detail.component\";\nimport {ProductEditComponent} from \"./pages/product-edit/product-edit.component\";\nimport {Role} from \"./enum/Role\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/product', pathMatch: 'full'},\n  {path: 'product/:id', component: DetailComponent},\n  {path: 'category/:id', component: CardComponent},\n  {path: 'product', component: CardComponent},\n  {path: 'category', component: CardComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'logout', component: LoginComponent},\n  {path: 'register', component: SignupComponent},\n  {path: 'cart', component: CartComponent},\n  {path: 'success', component: SignupComponent},\n  {path: 'order/:id', component: OrderDetailComponent, canActivate: [AuthGuard]},\n  {path: 'order', component: OrderComponent, canActivate: [AuthGuard]},\n  {path: 'seller', redirectTo: 'seller/product', pathMatch: 'full'},\n  {\n    path: 'seller/product',\n    component: ProductListComponent,\n    canActivate: [AuthGuard],\n    data: {roles: [Role.Customer, Role.Seller]}\n  },\n  {\n    path: 'profile',\n    component: UserDetailComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'seller/product/:id/edit',\n    component: ProductEditComponent,\n    canActivate: [AuthGuard],\n    data: {roles: [Role.Customer, Role.Seller]}\n  },\n  {\n    path: 'seller/product/:id/new',\n    component: ProductEditComponent,\n    canActivate: [AuthGuard],\n    data: {roles: [Role.Customer]}\n  },\n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)//{onSameUrlNavigation: 'reload'}\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n",
    "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Simple shop';\n}\n",
    "<!--The content below is only a placeholder and can be replaced.-->\n<div class=\"container\">\n  <app-navigation></app-navigation>\n  <router-outlet></router-outlet>\n</div>\n",
    "import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\n\nimport {AppComponent} from './app.component';\nimport {CardComponent} from './pages/card/card.component';\nimport {PaginationComponent} from './parts/pagination/pagination.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {FormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {CookieService} from \"ngx-cookie-service\";\nimport {ErrorInterceptor} from \"./_interceptors/error-interceptor.service\";\nimport {JwtInterceptor} from \"./_interceptors/jwt-interceptor.service\";\nimport {OrderComponent} from './pages/order/order.component';\nimport {OrderDetailComponent} from './pages/order-detail/order-detail.component';\nimport {ProductListComponent} from './pages/product-list/product.list.component';\nimport {UserDetailComponent} from './pages/user-edit/user-detail.component';\nimport {ProductEditComponent} from './pages/product-edit/product-edit.component';\nimport {NavigationComponent} from \"./parts/navigation/navigation.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    CardComponent,\n    PaginationComponent,\n    LoginComponent,\n    SignupComponent,\n    DetailComponent,\n    CartComponent,\n    OrderComponent,\n    OrderDetailComponent,\n    ProductListComponent,\n    UserDetailComponent,\n    ProductEditComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n\n  ],\n  providers: [CookieService,\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n",
    "export enum OrderStatus {\r\n  \"New\",\r\n  \"Finished\",\r\n  \"Cenceled\"\r\n}\r\n",
    "export enum Role {\r\n  Customer = 'ROLE_CUSTOMER',\r\n  Seller = 'ROLE_SELLER'\r\n}\r\n",
    "import {ProductInfo} from \"./productInfo\";\r\n\r\nexport class ProductInOrder {\r\n  productId: string;\r\n  productName: string;\r\n  productPrice: number;\r\n  productStock: number;\r\n  productDescription: string;\r\n  productIcon: string;\r\n  count: number;\r\n\r\n  constructor(productInfo: ProductInfo, quantity = 1) {\r\n    this.productId = productInfo.productId;\r\n    this.productName = productInfo.productName;\r\n    this.productPrice = productInfo.productPrice;\r\n    this.productStock = productInfo.productStock;\r\n    this.productDescription = productInfo.productDescription;\r\n    ;\r\n    this.productIcon = productInfo.productIcon;\r\n    this.count = quantity;\r\n  }\r\n}\r\n",
    "import {Role} from \"../enum/Role\";\r\n\r\nexport class User {\r\n\r\n  email: string;\r\n\r\n  password: string;\r\n\r\n  name: string;\r\n\r\n  phone: string;\r\n\r\n  address: string;\r\n\r\n  active: boolean;\r\n\r\n  role: string;\r\n\r\n  constructor() {\r\n    this.active = true;\r\n    this.role = Role.Customer;\r\n  }\r\n}\r\n",
    "import {ProductInOrder} from \"./ProductInOrder\";\r\n\r\nexport class ProductInfo {\r\n  productId: string;\r\n  productName: string;\r\n  productPrice: number;\r\n  productStock: number;\r\n  productDescription: string;\r\n  productIcon: string;\r\n  productStatus: number; // 0: onsale 1: offsale\r\n  createTime: string;\r\n  updateTime: string;\r\n\r\n\r\n  constructor(productInOrder?: ProductInOrder) {\r\n    if (productInOrder) {\r\n      this.productId = productInOrder.productId;\r\n      this.productName = productInOrder.productName;\r\n      this.productPrice = productInOrder.productPrice;\r\n      this.productStock = productInOrder.productStock;\r\n      this.productDescription = productInOrder.productDescription;\r\n      this.productIcon = productInOrder.productIcon;\r\n      this.productStatus = 0;\r\n    } else {\r\n      this.productId = '';\r\n      this.productName = '';\r\n      this.productPrice = 20;\r\n      this.productStock = 100;\r\n      this.productDescription = '';\r\n      this.productIcon = '';\r\n      this.productStatus = 0;\r\n    }\r\n  }\r\n}\r\n\r\n",
    "import {Component, OnDestroy, OnInit} from '@angular/core';\r\n// import {prod, products} from '../shared/mockData';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Subscription} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.css']\r\n})\r\nexport class CardComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  title: string;\r\n  page: any;\r\n  private paramSub: Subscription;\r\n  private querySub: Subscription;\r\n\r\n\r\n  constructor(private productService: ProductService,\r\n              private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.querySub = this.route.queryParams.subscribe(() => {\r\n      this.update();\r\n    });\r\n    this.paramSub = this.route.params.subscribe(() => {\r\n      this.update();\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.querySub.unsubscribe();\r\n    this.paramSub.unsubscribe();\r\n  }\r\n\r\n  update() {\r\n    if (this.route.snapshot.queryParamMap.get('page')) {\r\n      const currentPage = +this.route.snapshot.queryParamMap.get('page');\r\n      const size = +this.route.snapshot.queryParamMap.get('size');\r\n      this.getProds(currentPage, size);\r\n    } else {\r\n      this.getProds();\r\n    }\r\n  }\r\n\r\n  getProds(page: number = 1, size: number = 3) {\r\n    if (this.route.snapshot.url.length == 1) {\r\n      this.productService.getAllInPage(+page, +size)\r\n        .subscribe(page => {\r\n          this.page = page;\r\n          this.title = 'Get Whatever You Want!';\r\n        });\r\n    } else { //  /category/:id\r\n      const type = this.route.snapshot.url[1].path;\r\n      this.productService.getCategoryInPage(+type, page, size)\r\n        .subscribe(categoryPage => {\r\n          this.title = categoryPage.category;\r\n          this.page = categoryPage.page;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n",
    "<h1 align=\"center\" class=\"display-4 mb-5\">{{title}}</h1>\r\n<div class=\"row card-deck text-center\">\r\n  <div *ngFor=\"let productInfo of page?.content\" class=\"col-lg-4 \">\r\n    <div class=\"card mb-4\">\r\n      <img height=\"50%\" class=\"card-img-top\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title \">{{productInfo.productName}}</h4>\r\n        <div class=\"text-left\">\r\n          <p class=\"card-test\"><strong>Description: </strong>{{productInfo.productDescription}}</p>\r\n          <p class=\"card-text\"><strong>Price: </strong>{{productInfo.productPrice | currency}}</p>\r\n          <p class=\"card-text\"><strong>Stock: </strong>{{productInfo.productStock}}</p>\r\n        </div>\r\n        <br>\r\n        <a routerLink=\"/product/{{productInfo.productId}}\" *ngIf=\"productInfo.productStatus == 0; else offBlock\"\r\n           class=\"btn btn-primary btn-lg\"\r\n        >Get It!</a>\r\n        <ng-template #offBlock><a class=\"btn btn-secondary btn-lg disabled\">Unavailable</a></ng-template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-pagination [currentPage]=\"page\"></app-pagination>\r\n",
    "import {AfterContentChecked, Component, OnDestroy, OnInit} from \"@angular/core\";\r\nimport {CartService} from \"../../services/cart.service\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {JwtResponse} from \"../../response/JwtResponse\";\r\nimport {Subject, Subscription} from \"rxjs\";\r\nimport {ProductInOrder} from \"../../models/ProductInOrder\";\r\nimport {debounceTime, switchMap} from \"rxjs/operators\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit, OnDestroy, AfterContentChecked {\r\n\r\n  constructor(private cartService: CartService,\r\n              private userService: UserService,\r\n              private router: Router) {\r\n    this.userSubscription = this.userService.currentUser.subscribe(user => this.currentUser = user);\r\n  }\r\n\r\n  productInOrders = [];\r\n  total = 0;\r\n  currentUser: JwtResponse;\r\n  userSubscription: Subscription;\r\n\r\n  private updateTerms = new Subject<ProductInOrder>();\r\n  sub: Subscription;\r\n\r\n  static validateCount(productInOrder) {\r\n    const max = productInOrder.productStock;\r\n    if (productInOrder.count > max) {\r\n      productInOrder.count = max;\r\n    } else if (productInOrder.count < 1) {\r\n      productInOrder.count = 1;\r\n    }\r\n    console.log(productInOrder.count);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cartService.getCart().subscribe(prods => {\r\n      this.productInOrders = prods;\r\n    });\r\n\r\n    this.sub = this.updateTerms.pipe(\r\n      // wait 300ms after each keystroke before considering the term\r\n      debounceTime(300),\r\n      //\r\n      // ignore new term if same as previous term\r\n      // Same Object Reference, not working here\r\n      //  distinctUntilChanged((p: ProductInOrder, q: ProductInOrder) => p.count === q.count),\r\n      //\r\n      // switch to new search observable each time the term changes\r\n      switchMap((productInOrder: ProductInOrder) => this.cartService.update(productInOrder))\r\n    ).subscribe(prod => {\r\n        if (prod) {\r\n          throw new Error();\r\n        }\r\n      },\r\n      _ => console.log('Update Item Failed'));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (!this.currentUser) {\r\n      this.cartService.storeLocalCart();\r\n    }\r\n    this.userSubscription.unsubscribe();\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this.total = this.productInOrders.reduce(\r\n      (prev, cur) => prev + cur.count * cur.productPrice, 0);\r\n  }\r\n\r\n  addOne(productInOrder) {\r\n    productInOrder.count++;\r\n    CartComponent.validateCount(productInOrder);\r\n    if (this.currentUser) {\r\n      this.updateTerms.next(productInOrder);\r\n    }\r\n  }\r\n\r\n  minusOne(productInOrder) {\r\n    productInOrder.count--;\r\n    CartComponent.validateCount(productInOrder);\r\n    if (this.currentUser) {\r\n      this.updateTerms.next(productInOrder);\r\n    }\r\n  }\r\n\r\n  onChange(productInOrder) {\r\n    CartComponent.validateCount(productInOrder);\r\n    if (this.currentUser) {\r\n      this.updateTerms.next(productInOrder);\r\n    }\r\n  }\r\n\r\n\r\n  remove(productInOrder: ProductInOrder) {\r\n    this.cartService.remove(productInOrder).subscribe(\r\n      success => {\r\n        this.productInOrders = this.productInOrders.filter(e => e.productId !== productInOrder.productId);\r\n        console.log('Cart: ' + this.productInOrders);\r\n      },\r\n      _ => console.log('Remove Cart Failed'));\r\n  }\r\n\r\n  checkout() {\r\n    if (!this.currentUser) {\r\n      this.router.navigate(['/login'], {queryParams: {returnUrl: this.router.url}});\r\n    } else if (this.currentUser.role !== Role.Customer) {\r\n      this.router.navigate(['/seller']);\r\n    } else {\r\n      this.cartService.checkout().subscribe(\r\n        _ => {\r\n          this.productInOrders = [];\r\n        },\r\n        error1 => {\r\n          console.log('Checkout Cart Failed');\r\n        });\r\n      this.router.navigate(['/']);\r\n    }\r\n\r\n  }\r\n}\r\n\r\n",
    "<h1 align=\"center\" class=\"display-4 mb-5\">Your cart</h1>\r\n\r\n<!--Cart Detail Table-->\r\n<table class=\"table table-striped text-center\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">Photo</th>\r\n    <th scope=\"col\">Name</th>\r\n    <th scope=\"col\">Price</th>\r\n    <th scope=\"col\">Quantity</th>\r\n    <th scope=\"col\">Total</th>\r\n    <th scope=\"col\">Action</th>\r\n\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n\r\n  <tr *ngFor=\"let productInOrder of productInOrders\">\r\n    <th class=\"align-middle\" scope=\"row\">\r\n      <a routerLink=\"/product/{{productInOrder.productId}}\"><img height=\"100px\"\r\n                                                                 src=\"{{productInOrder.productIcon}}\"\r\n                                                                 alt=\"{{productInOrder.productName}}\"></a>\r\n    </th>\r\n    <td class=\"align-middle\"><a\r\n      routerLink=\"/product/{{productInOrder.productId}}\">{{productInOrder.productName}}</a></td>\r\n    <td class=\"align-middle\">{{productInOrder.productPrice | currency}}</td>\r\n\r\n    <td class=\"align-middle\">\r\n      <a (click)=\"minusOne(productInOrder)\"><i class=\"fa fa-minus\"></i></a>\r\n      <input min=\"1\" id=\"{{productInOrder.productId}}\"\r\n             [max]=productInOrder.productStock\r\n             [(ngModel)]=\"productInOrder.count\"\r\n             (change)=\"onChange(productInOrder)\"\r\n             size=\"5\"\r\n             type=\"number\"\r\n             required\r\n             name='count'>\r\n      <a (click)=\"addOne(productInOrder)\"> <i class=\"fa fa-plus\"></i></a>\r\n    </td>\r\n\r\n    <td class=\"align-middle\">{{productInOrder.productPrice * productInOrder.count|currency}}</td>\r\n    <td class=\"align-middle\">\r\n      <a (click)=\"remove(productInOrder)\" routerLink=\"./\">Remove</a>\r\n    </td>\r\n\r\n  </tr>\r\n\r\n  </tbody>\r\n</table>\r\n\r\n<div *ngIf=\"productInOrders?.length > 0; else empty\">\r\n  <h5 style=\"display: inline;\">Total: {{total | currency}}</h5>\r\n  <button (click)=\"checkout()\" class=\"btn btn-warning float-right\">Checkout</button>\r\n</div>\r\n<ng-template #empty>\r\n  <h4 class=\"text-muted text-center\">Empty</h4>\r\n</ng-template>\r\n\r\n\r\n",
    "import {Component, OnInit} from \"@angular/core\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  isInvalid: boolean;\r\n  isLogout: boolean;\r\n  submitted = false;\r\n  model: any = {\r\n    username: '',\r\n    password: '',\r\n    remembered: false\r\n  };\r\n\r\n  returnUrl = '/';\r\n\r\n  constructor(private userService: UserService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    let params = this.route.snapshot.queryParamMap;\r\n    this.isLogout = params.has('logout');\r\n    this.returnUrl = params.get('returnUrl');\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.userService.login(this.model).subscribe(\r\n      user => {\r\n        if (user) {\r\n          if (user.role != Role.Customer) {\r\n            this.returnUrl = '/seller';\r\n          }\r\n\r\n          this.router.navigateByUrl(this.returnUrl);\r\n        } else {\r\n          this.isLogout = false;\r\n          this.isInvalid = true;\r\n        }\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  fillLoginFields(u, p) {\r\n    this.model.username = u;\r\n    this.model.password = p;\r\n    this.onSubmit();\r\n  }\r\n}\r\n",
    "<h1 align=\"center\" class=\"display-4 mb-5\">Sign In</h1>\r\n<div style=\"width:40%; margin: 25px auto\">\r\n\r\n  <div class=\"alert alert-danger\" *ngIf=\"isInvalid\">\r\n    Invalid username and password.\r\n  </div>\r\n  <div class=\"alert alert-info\" *ngIf=\"isLogout\">\r\n    You have been logged out.\r\n  </div>\r\n\r\n\r\n  <form #form='ngForm' (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n      <label>Email address</label>\r\n      <input type=\"text\" class=\"form-control form-control-lg\" id=\"email\" name=\"email\" placeholder=\"Enter email\"\r\n             required autofocus [(ngModel)]=\"model.username\" #email=\"ngModel\" autocomplete=\"email\">\r\n      <div [hidden]=\"email.valid || email.pristine\" class=\"alert alert-danger\">\r\n        Email is required\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"password\" class=\"form-control form-control-lg\" id=\"password\" name=\"password\" autocomplete=\"password\"\r\n             placeholder=\"Password\" required [(ngModel)]=\"model.password\" #password='ngModel'>\r\n      <div [hidden]=\"password.valid || password.pristine\" class=\"alert alert-danger\">\r\n        Email is required\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <div>\r\n        <input type=\"checkbox\" id=\"remember_me\" name=\"remember-me\" [(ngModel)]=\"model.remembered\">\r\n        <label for=\"remember_me\" class=\"inline\">Remember me</label>\r\n        <a class=\"float-right\" routerLink=\"/register\">Sign Up</a>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <button [disabled]=\"!form.form.valid\" type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign In</button>\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <strong>Sample Users</strong>\r\n  <table style=\"width: 100%;\" id=\"sampleLoginTable\">\r\n    <tr>\r\n      <td><a\r\n        (click)=\"fillLoginFields('customer1@mail.com','123')\"\r\n        href=\"javascript:void(0)\">customer1</a></td>\r\n    </tr>\r\n  </table>\r\n\r\n</div>\r\n",
    "import {Component, OnInit} from \"@angular/core\";\r\nimport {OrderService} from \"../../services/order.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {Order} from \"../../models/Order\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-order-detail',\r\n  templateUrl: './order-detail.component.html',\r\n  styleUrls: ['./order-detail.component.css']\r\n})\r\nexport class OrderDetailComponent implements OnInit {\r\n\r\n  constructor(private orderService: OrderService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  order$: Observable<Order>;\r\n\r\n  ngOnInit() {\r\n    // this.items$ = this.route.paramMap.pipe(\r\n    //     map(paramMap =>paramMap.get('id')),\r\n    //     switchMap((id:string) => this.orderService.show(id))\r\n    // )\r\n    this.order$ = this.orderService.show(this.route.snapshot.paramMap.get('id'));\r\n  }\r\n\r\n}\r\n",
    "<h1 align=\"center\" class=\"display-4 mb-5\">Order Detail</h1>\r\n<table class=\"table table-striped text-center\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">Photo</th>\r\n    <th scope=\"col\">Name</th>\r\n    <th scope=\"col\">Description</th>\r\n    <th scope=\"col\">Price</th>\r\n    <th scope=\"col\">Quantity</th>\r\n    <th scope=\"col\">Subtotal</th>\r\n\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let item of (order$ | async)?.products\">\r\n    <th class=\"align-middle\" scope=\"row\">\r\n      <a routerLink=\"/seller/product/{{item.productId}}/edit\"><img height=\"100px\" src=\"{{item.productIcon}}\"\r\n                                                                   alt=\"{{item.productName}}\"></a>\r\n    </th>\r\n    <td class=\"align-middle\"><a routerLink=\"/seller/product/{{item.productId}}/edit\">{{item.productName}}</a></td>\r\n    <td class=\"align-middle\">{{item.productDescription}}</td>\r\n    <td class=\"align-middle\">{{item.productPrice | currency}}</td>\r\n    <td class=\"align-middle\">{{item.count}}</td>\r\n    <td class=\"align-middle\">{{(item.productPrice * item.count | currency)}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n<h5 style=\"display: inline\" class=\"float-right\">Total: {{(order$ | async)?.orderAmount | currency}}</h5>\r\n",
    "import {Component, OnDestroy, OnInit} from \"@angular/core\";\r\nimport {JwtResponse} from \"../../response/JwtResponse\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {OrderService} from \"../../services/order.service\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {Order} from \"../../models/Order\";\r\nimport {OrderStatus} from \"../../enum/OrderStatus\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit, OnDestroy {\r\n\r\n  page: any;\r\n  OrderStatus = OrderStatus;\r\n  currentUser: JwtResponse;\r\n  Role = Role;\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private orderService: OrderService,\r\n              private userService: UserService,\r\n              private route: ActivatedRoute\r\n  ) {\r\n  }\r\n\r\n  querySub: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.userService.currentUserValue;\r\n    this.querySub = this.route.queryParams.subscribe(() => {\r\n      this.update();\r\n    });\r\n\r\n  }\r\n\r\n  update() {\r\n    let nextPage = 1;\r\n    let size = 10;\r\n    if (this.route.snapshot.queryParamMap.get('page')) {\r\n      nextPage = +this.route.snapshot.queryParamMap.get('page');\r\n      size = +this.route.snapshot.queryParamMap.get('size');\r\n    }\r\n    this.orderService.getPage(nextPage, size).subscribe(page => this.page = page, _ => {\r\n      console.log(\"Get Orde Failed\")\r\n    });\r\n  }\r\n\r\n\r\n  cancel(order: Order) {\r\n    this.orderService.cancel(order.orderId).subscribe(res => {\r\n      if (res) {\r\n        order.orderStatus = res.orderStatus;\r\n      }\r\n    });\r\n  }\r\n\r\n  finish(order: Order) {\r\n    this.orderService.finish(order.orderId).subscribe(res => {\r\n      if (res) {\r\n        order.orderStatus = res.orderStatus;\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.querySub.unsubscribe();\r\n  }\r\n\r\n}\r\n",
    "<h1 align=\"center\" class=\"display-4 mb-5\">Orders</h1>\r\n\r\n<table class=\"table table-striped text-center\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">Order #</th>\r\n    <th scope=\"col\">Customer Name</th>\r\n    <th scope=\"col\">Customer Email</th>\r\n    <th scope=\"col\">Customer phone</th>\r\n    <th scope=\"col\">Shipping Address</th>\r\n    <th scope=\"col\">Total</th>\r\n    <th scope=\"col\">Order Data</th>\r\n    <th scope=\"col\">Status</th>\r\n    <th scope=\"col\">Action</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n\r\n  <tr *ngFor=\"let order of page?.content\">\r\n    <th class=\"align-middle\" scope=\"row\">\r\n      {{order.orderId}}\r\n    </th>\r\n    <td class=\"align-middle\">{{order.buyerName}}</td>\r\n    <td class=\"align-middle\">{{order.buyerEmail}}</td>\r\n    <td class=\"align-middle\">{{order.buyerPhone}}</td>\r\n    <td class=\"align-middle\">{{order.buyerAddress}}</td>\r\n    <td class=\"align-middle\">{{order.orderAmount | currency}}</td>\r\n    <td class=\"align-middle\">{{order.createTime | date}}</td>\r\n    <td class=\"align-middle\">{{OrderStatus[order.orderStatus]}}</td>\r\n    <td class=\"align-middle\">\r\n      <a *ngIf=\"!(currentUser.role == Role.Customer && currentUser.name == order.buyerEmail)\"\r\n         style=\"display:\r\n            block\" href=\"\" routerLink=\"/order/{{order.orderId}}\">\r\n        Show</a>\r\n      <a *ngIf=\"order.orderStatus == 0\" style=\"display: block\" (click)=\"cancel(order)\" routerLink=\"./\">Cancel</a>\r\n      <a *ngIf=\"currentUser.role != Role.Customer && order.orderStatus == 0\"\r\n         style=\"display: block\"\r\n         (click)=\"finish(order)\"\r\n         routerLink=\"./\">\r\n        Finish</a>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<app-pagination [currentPage]=\"page\"></app-pagination>\r\n",
    "import {Component, OnInit} from '@angular/core';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {CartService} from '../../services/cart.service';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {ProductInOrder} from '../../models/ProductInOrder';\r\nimport {ProductInfo} from '../../models/productInfo';\r\n\r\n@Component({\r\n  selector: 'app-detail',\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.css']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n  title: string;\r\n  count: number;\r\n  productInfo: ProductInfo;\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private cartService: CartService,\r\n    private cookieService: CookieService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getProduct();\r\n    this.title = 'Product Detail';\r\n    this.count = 1;\r\n  }\r\n\r\n  // ngOnChanges(changes: SimpleChanges): void {\r\n  //   // Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\r\n  //   // Add '${implements OnChanges}' to the class.\r\n  //   console.log(changes);\r\n  //   if (this.item.quantity in changes) {\r\n\r\n  //   }\r\n  // }\r\n\r\n  getProduct(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.productService.getDetail(id).subscribe(\r\n      prod => {\r\n        this.productInfo = prod;\r\n      },\r\n      _ => console.log('Get Cart Failed')\r\n    );\r\n  }\r\n\r\n  addToCart() {\r\n    this.cartService\r\n      .addItem(new ProductInOrder(this.productInfo, this.count))\r\n      .subscribe(\r\n        res => {\r\n          if (!res) {\r\n            console.log('Add Cart failed' + res);\r\n            throw new Error();\r\n          }\r\n          this.router.navigateByUrl('/cart');\r\n        },\r\n        _ => console.log('Add Cart Failed')\r\n      );\r\n  }\r\n\r\n  validateCount() {\r\n    console.log('Validate');\r\n    const max = this.productInfo.productStock;\r\n    if (this.count > max) {\r\n      this.count = max;\r\n    } else if (this.count < 1) {\r\n      this.count = 1;\r\n    }\r\n  }\r\n}\r\n",
    "<h1 align=\"center\" class=\"display-4 mb-5\">{{title}}</h1>\r\n<div class=\"row text-center justify-content-center\">\r\n  <div class=\"col-lg-6 \">\r\n    <div class=\"card mb-4 \">\r\n      <img height=\"60%\" class=\"card-img-top\" src=\"{{productInfo?.productIcon}}\">\r\n      <div class=\"card-body\">\r\n        <h4 class=\"card-title \">{{productInfo?.productName}}</h4>\r\n        <form name=\"form\" #form='ngForm' (ngSubmit)=\"productInfo?.productStatus == 0 && addToCart()\">\r\n          <div class=\"text-left\">\r\n            <input hidden name=\"productId\" [value]=productInfo?.productId>\r\n            <p class=\"card-test\"><strong>Description: </strong>{{productInfo?.productDescription}}</p>\r\n            <p class=\"card-text\">\r\n              <strong>Price: </strong>\r\n              <label id=\"price\">{{productInfo?.productPrice | currency}}</label>\r\n            </p>\r\n            <p class=\"card-text\"><strong>Stock: </strong>{{productInfo?.productStock}}</p>\r\n\r\n            <label class=\"card-text\">\r\n              <strong>Quantity: </strong>\r\n              <input [(ngModel)]=count\r\n                     (change)=\"validateCount()\"\r\n                     type=\"number\"\r\n                     name=\"count\"\r\n                     required\r\n                     min=\"1\"\r\n                     [max]=productInfo?.productStock\r\n              >\r\n            </label>\r\n\r\n\r\n            <p class=\"card-text\"><strong>Subtotal: </strong>\r\n              <label id=\"subtotal\">{{count * productInfo?.productPrice | currency}}</label>\r\n            </p>\r\n          </div>\r\n          <button type=\"submit\" [disabled]=\"!form.form.valid\" *ngIf=\"productInfo?.productStatus == 0; else offBlock\"\r\n                  class=\"btn btn-primary btn-lg\"\r\n          >Add to Cart\r\n          </button>\r\n          <ng-template #offBlock><a class=\"btn btn-secondary btn-lg disabled\">Unavailable</a></ng-template>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
    "import {AfterContentChecked, Component, OnInit} from \"@angular/core\";\r\nimport {ProductInfo} from \"../../models/productInfo\";\r\nimport {ProductService} from \"../../services/product.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.css']\r\n})\r\nexport class ProductEditComponent implements OnInit, AfterContentChecked {\r\n\r\n  product = new ProductInfo();\r\n\r\n  constructor(private productService: ProductService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n  }\r\n\r\n  productId: string;\r\n  isEdit = false;\r\n\r\n  ngOnInit() {\r\n    this.productId = this.route.snapshot.paramMap.get('id');\r\n    if (this.productId) {\r\n      this.isEdit = true;\r\n      this.productService.getDetail(this.productId).subscribe(prod => this.product = prod);\r\n    }\r\n\r\n  }\r\n\r\n  update() {\r\n    this.productService.update(this.product).subscribe(prod => {\r\n        if (!prod) throw new Error();\r\n        this.router.navigate(['/seller']);\r\n      },\r\n      err => {\r\n      });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.productId) {\r\n      this.update();\r\n    } else {\r\n      this.add();\r\n    }\r\n  }\r\n\r\n  add() {\r\n    this.productService.create(this.product).subscribe(prod => {\r\n        if (!prod) throw new Error;\r\n        this.router.navigate(['/']);\r\n      },\r\n      e => {\r\n      });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    console.log(this.product);\r\n  }\r\n}\r\n",
    "<h1 align=\"center\" class=\"display-4 mb-5\">Edit Product</h1>\r\n<div style=\"width:40%; margin: 25px auto\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n    <!--Id-->\r\n    <div class=\"form-group\">\r\n      <label for=\"productId\">Code</label>\r\n      <input [readOnly]=\"isEdit\" [disabled]=\"isEdit\" [(ngModel)]=\"product.productId\" type=\"text\"\r\n             class=\"form-control form-control-lg\" #productIdInput\r\n             id=\"productId\" name=\"productId\" required #productId=\"ngModel\">\r\n      <div *ngIf=\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\">\r\n        <div *ngIf=\"productIdInput.errors.required\">\r\n          Name is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--Photo-->\r\n    <div class=\"form-group\">\r\n      <label>Photo Link</label>\r\n      <input [(ngModel)]=\"product.productIcon\" type=\"text\" class=\"form-control form-control-lg\" id=\"productIcon\"\r\n             name=\"productIcon\" placeholder=\"Photo\">\r\n    </div>\r\n\r\n    <!--Name-->\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n      <input [(ngModel)]=\"product.productName\" type=\"text\" class=\"form-control form-control-lg\" id=\"productName\"\r\n             #productName=\"ngModel\"\r\n             name=\"productName\" placeholder=\"Name\" required>\r\n    </div>\r\n    <div *ngIf=\"productName.invalid && (productName.dirty ||productName.touched)\">\r\n      <div *ngIf=\"productName.errors.required\">\r\n        Name is required.\r\n      </div>\r\n    </div>\r\n\r\n    <!--Description-->\r\n    <div class=\"form-group\">\r\n      <label>Description</label>\r\n      <textarea class=\"form-control form-control-lg text-left\"\r\n                id=\"productDescription\" name=\"productDescription\"\r\n                placeholder=\"Description\" [(ngModel)]=\"product.productDescription\"></textarea>\r\n    </div>\r\n    <!--Price-->\r\n    <div class=\"form-group\">\r\n      <label for=\"productPrice\">Price</label>\r\n      <input class=\"form-control form-control-lg\"\r\n             type=\"number\"\r\n             id=\"productPrice\"\r\n             name=\"productPrice\"\r\n             #productPrice=\"ngModel\"\r\n             [ngModel]=\"product.productPrice\" (ngModelChange)=\"product.productPrice=$event\"\r\n             required>\r\n      <div *ngIf=\"productPrice.invalid && (productPrice.dirty ||productPrice.touched)\">\r\n        <div *ngIf=\"productPrice.errors.required\">\r\n          Price is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--Stock-->\r\n    <div class=\"form-group\">\r\n      <label for=\"productStock\">Stock</label>\r\n      <input class=\"form-control form-control-lg\"\r\n             type=\"number\"\r\n             id=\"productStock\"\r\n             name=\"productStock\"\r\n             min=\"0\" #productStock=\"ngModel\"\r\n             [(ngModel)]=\"product.productStock\"\r\n             required>\r\n      <div *ngIf=\"productStock.invalid && (productStock.dirty ||productStock.touched)\">\r\n        <div *ngIf=\"productStock.errors.required\">\r\n          Stock is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--Status-->\r\n    <div class=\"form-group\">\r\n      <label for=\"productStatus\">Status</label>\r\n      <select class=\"custom-select custom-select-lg \" id=\"productStatus\" name=\"productStatus\" required\r\n              [(ngModel)]=\"product.productStatus\">\r\n        <option [ngValue]=0>Available</option>\r\n        <option [ngValue]=1>Unavailable</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button type=\"submit\" [disabled]=\"!form.form.valid\" class=\"btn btn-lg btn-primary btn-block\">Submit</button>\r\n    </div>\r\n  </form>\r\n\r\n\r\n</div>\r\n",
    "import {Component, OnDestroy, OnInit} from \"@angular/core\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {ProductService} from \"../../services/product.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {JwtResponse} from \"../../response/JwtResponse\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {ProductInfo} from \"../../models/productInfo\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n  selector: 'app-product.list',\r\n  templateUrl: './product.list.component.html',\r\n  styleUrls: ['./product.list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private userService: UserService,\r\n              private productService: ProductService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  Role = Role;\r\n  currentUser: JwtResponse;\r\n  page: any;\r\n  // productStatus = this.productService.getAllInPage()\r\n  private querySub: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.querySub = this.route.queryParams.subscribe(() => {\r\n      this.update();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.querySub.unsubscribe();\r\n  }\r\n\r\n  update() {\r\n    if (this.route.snapshot.queryParamMap.get('page')) {\r\n      const currentPage = +this.route.snapshot.queryParamMap.get('page');\r\n      const size = +this.route.snapshot.queryParamMap.get('size');\r\n      this.getProds(currentPage, size);\r\n    } else {\r\n      this.getProds();\r\n    }\r\n  }\r\n\r\n  getProds(page: number = 1, size: number = 5) {\r\n    this.productService.getAllInPage(+page, +size)\r\n      .subscribe(page => {\r\n        this.page = page;\r\n      });\r\n\r\n  }\r\n\r\n\r\n  remove(productInfos: ProductInfo[], productInfo) {\r\n    this.productService.delelte(productInfo).subscribe(_ => {\r\n        productInfos = productInfos.filter(e => e.productId != productInfo);\r\n      },\r\n      err => {\r\n      });\r\n  }\r\n\r\n\r\n}\r\n",
    "<h1 align=\"center\" class=\"display-4 \">Products</h1>\r\n<a *ngIf=\"currentUser?.role == Role.Customer\" style=\"color: inherit\"\r\n   routerLink=\"/seller/product/new\" class=\"float-right mb-3\"><i class=\"fas fa-plus fa-2x\">Add</i>\r\n</a>\r\n<table id=\"table\" class=\"table table-striped text-center\" style=\"width:100%;\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">Photo</th>\r\n    <th scope=\"col\">Code</th>\r\n    <th scope=\"col\">Name</th>\r\n    <th scope=\"col\">Type</th>\r\n    <th scope=\"col\">Description</th>\r\n    <th scope=\"col\">Price</th>\r\n    <th scope=\"col\">Stock</th>\r\n    <th scope=\"col\">Status</th>\r\n    <th scope=\"col\">Action</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let productInfo of page?.content\">\r\n    <th class=\"align-middle\" scope=\"row\">\r\n      <img height=\"100px\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\r\n    </th>\r\n    <td class=\"align-middle\">{{productInfo.productId}}</td>\r\n    <td class=\"align-middle\">{{productInfo.productName}}</td>\r\n    <td class=\"align-middle\">{{productInfo.productDescription}}</td>\r\n    <td class=\"align-middle\">{{productInfo.productPrice | currency}}</td>\r\n    <td class=\"align-middle\">{{productInfo.productStock}}</td>\r\n    <!--        <td class=\"align-middle\">{{ProductStatus[productInfo.productStatus]}}</td>-->\r\n    <td class=\"align-middle\">\r\n      <a style=\"display: block\" routerLink=\"/seller/product/{{productInfo.productId}}/edit\">\r\n        Edit</a>\r\n\r\n      <a *ngIf=\"currentUser?.role == Role.Customer\" style=\"display: block\"\r\n         (click)=\"remove(page.content, productInfo.productId)\" routerLink=\"./\">\r\n        Remove</a>\r\n    </td>\r\n\r\n  </tbody>\r\n</table>\r\n<app-pagination [currentPage]=\"page\"></app-pagination>\r\n",
    "import {Component, OnInit} from \"@angular/core\";\r\nimport {User} from \"../../models/User\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  constructor(private location: Location,\r\n              private userService: UserService,\r\n              private router: Router) {\r\n    this.user = new User();\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.userService.signUp(this.user).subscribe(u => {\r\n        this.router.navigate(['/login']);\r\n      },\r\n      e => {\r\n      });\r\n  }\r\n\r\n}\r\n",
    "<h1 align=\"center\" class=\"display-4 mb-5\">Sign Up</h1>\r\n<div style=\"width:40%; margin: 25px auto\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n      <label><b>Email address</b></label>\r\n      <input [(ngModel)]=\"user.email\" type=\"email\" class=\"form-control form-control-lg\" id=\"email\" name=\"email\"\r\n             placeholder=\"Enter email\" email required autofocus #email=\"ngModel\">\r\n      <div *ngIf=\"email.invalid && (email.dirty ||email.touched)\">\r\n        <div *ngIf=\"email.errors.required\">\r\n          Email is required.\r\n        </div>\r\n        <div *ngIf=\"email.errors.email\">\r\n          Invalid Email.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label><b>Name</b></label>\r\n      <input [(ngModel)]=\"user.name\" type=\"text\" class=\"form-control form-control-lg\" id=\"name\" name=\"name\"\r\n             placeholder=\"Your name\" required #name=\"ngModel\">\r\n      <div *ngIf=\"name.invalid && (name.dirty ||name.touched)\">\r\n        <div *ngIf=\"name.errors.required\">\r\n          Name is required.\r\n        </div>\r\n        <div *ngIf=\"name.errors.minlength\">\r\n          Name must be at least 3 characters long.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label><b>Password</b></label>\r\n      <input [(ngModel)]=\"user.password\" type=\"password\" class=\"form-control form-control-lg\" id=\"password\"\r\n             name=\"password\" placeholder=\"Password\" minlength=\"3\" required #password=\"ngModel\">\r\n      <div *ngIf=\"password.invalid && (password.dirty ||password.touched)\">\r\n        <div *ngIf=\"password.errors.required\">\r\n          Password is required.\r\n        </div>\r\n        <div *ngIf=\"password.errors.minlength\">\r\n          Password must be at least 3 characters long.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label><b>Phone</b></label>\r\n      <input [(ngModel)]=\"user.phone\" type=\"text\" class=\"form-control form-control-lg\" id=\"phone\" name=\"phone\"\r\n             placeholder=\"Phone\" required #phone=\"ngModel\">\r\n      <div *ngIf=\"phone.invalid && (phone.dirty ||phone.touched)\">\r\n        <div *ngIf=\"phone.errors.required\">\r\n          Phone is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label><b>Address</b></label>\r\n      <input [(ngModel)]=\"user.address\" type=\"text\" class=\"form-control form-control-lg\" id=\"address\" name=\"address\"\r\n             placeholder=\"Address\" required #address=\"ngModel\">\r\n      <div *ngIf=\"address.invalid && (address.dirty ||address.touched)\">\r\n        <div *ngIf=\"address.errors.required\">\r\n          Address is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!form.form.valid\">Sign Up</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n",
    "import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {User} from \"../../models/User\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrls: ['./user-detail.component.css']\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService,\r\n              private router: Router) {\r\n  }\r\n\r\n  user = new User();\r\n\r\n\r\n  ngOnInit() {\r\n    const account = this.userService.currentUserValue.account;\r\n\r\n    this.userService.get(account).subscribe(u => {\r\n      this.user = u;\r\n      this.user.password = '';\r\n    }, e => {\r\n\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.userService.update(this.user).subscribe(u => {\r\n      this.userService.nameTerms.next(u.name);\r\n      let url = '/';\r\n      if (this.user.role != Role.Customer) {\r\n        url = '/seller';\r\n      }\r\n      this.router.navigateByUrl(url);\r\n    }, _ => {\r\n    })\r\n  }\r\n\r\n}\r\n",
    "<h1 align=\"center\" class=\"display-4 mb-5\">Edit Profiles</h1>\r\n<div style=\"width:40%; margin: 25px auto\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n      <label><b>Email address</b></label>\r\n      <input readonly [value]=user?.email type=\"email\" class=\"form-control form-control-lg \" disabled id=\"email\"\r\n             name=\"email\" placeholder=\"Enter email\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label><b>Name</b></label>\r\n      <input [(ngModel)]=\"user.name\" type=\"text\" class=\"form-control form-control-lg\" id=\"name\" name=\"name\"\r\n             placeholder=\"Your name\" required #name=\"ngModel\" autofocus>\r\n      <div *ngIf=\"name.invalid && (name.dirty || name.touched)\">\r\n        <div *ngIf=\"name.errors.required\">\r\n          Name is required.\r\n        </div>\r\n        <div *ngIf=\"name.errors.minlength\">\r\n          Name must be at least 3 characters long.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label><b>Password</b></label>\r\n      <input [(ngModel)]=\"user.password\" type=\"password\" class=\"form-control form-control-lg\" id=\"password\"\r\n             name=\"password\" placeholder=\"Password\" minlength=\"3\" required #password=\"ngModel\">\r\n      <div *ngIf=\"password.invalid && (password.dirty ||password.touched)\">\r\n        <div *ngIf=\"password.errors.required\">\r\n          Password is required.\r\n        </div>\r\n        <div *ngIf=\"password.errors.minlength\">\r\n          Password must be at least 3 characters long.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label><b>Phone</b></label>\r\n      <input [(ngModel)]=\"user.phone\" type=\"text\" class=\"form-control form-control-lg\" id=\"phone\" name=\"phone\"\r\n             placeholder=\"Phone\" required #phone=\"ngModel\">\r\n      <div *ngIf=\"phone.invalid && (phone.dirty ||phone.touched)\">\r\n        <div *ngIf=\"phone.errors.required\">\r\n          Phone is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label><b>Address</b></label>\r\n      <input [(ngModel)]=\"user.address\" type=\"text\" class=\"form-control form-control-lg\" id=\"address\" name=\"address\"\r\n             placeholder=\"Address\" required #address=\"ngModel\">\r\n      <div *ngIf=\"address.invalid && (address.dirty ||address.touched)\">\r\n        <div *ngIf=\"address.errors.required\">\r\n          Address is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!form.form.valid\">Update</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n",
    "import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {JwtResponse} from \"../../response/JwtResponse\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Role} from \"../../enum/Role\";\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  currentUserSubscription: Subscription;\r\n  name$;\r\n  name: string;\r\n  currentUser: JwtResponse;\r\n  root = '/';\r\n  Role = Role;\r\n\r\n  constructor(private userService: UserService,\r\n              private router: Router,\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\r\n    this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role == Role.Customer) {\r\n        this.root = '/';\r\n      } else {\r\n        this.root = '/seller';\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.currentUserSubscription.unsubscribe();\r\n    // this.name$.unsubscribe();\r\n  }\r\n\r\n  logout() {\r\n    this.userService.logout();\r\n    // this.router.navigate(['/login'], {queryParams: {logout: 'true'}} );\r\n  }\r\n\r\n}\r\n",
    "<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" [routerLink]=\"root\">\r\n    <img src=\"/assets/brand.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\r\n    Simple online shop\r\n  </a>\r\n\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\r\n    <div class=\"navbar-nav\" *ngIf=\"!currentUser || currentUser.role == Role.Customer\">\r\n\r\n      <a class=\"nav-item nav-link \"\r\n         routerLink=\"/category/0\">\r\n        Category1\r\n      </a>\r\n      <a class=\"nav-item nav-link\"\r\n         routerLink=\"/category/1\">\r\n        Category2\r\n      </a>\r\n      <a class=\"nav-item nav-link \"\r\n         routerLink=\"/category/2\">\r\n        Category3\r\n      </a>\r\n      <a class=\"nav-item nav-link\"\r\n         routerLink=\"/category/3\">\r\n        Category4\r\n      </a>\r\n\r\n    </div>\r\n\r\n    <div class=\"navbar-nav ml-auto\">\r\n      <a *ngIf=\"!currentUser || currentUser.role == Role.Customer\"\r\n        class=\"nav-item nav-link \" routerLink=\"/cart\">\r\n        <i class=\"fas fa-shopping-cart\"></i>\r\n        Cart\r\n      </a>\r\n\r\n      <ng-container *ngIf=\"currentUser; else noUser\">\r\n        <a class=\"nav-item nav-link \" routerLink=\"/order\">\r\n          <i class=\"fas fa-list-ul\"></i>\r\n          Orders\r\n        </a>\r\n        <a class=\"nav-item nav-link \" routerLink=\"/profile\">\r\n          {{name}}\r\n        </a>\r\n        <a class=\"nav-item nav-link \" (click)=\"logout()\" routerLink=\"/login\" [queryParams]=\"{logout: true}\">\r\n          Sign Out\r\n        </a>\r\n      </ng-container>\r\n      <ng-template #noUser>\r\n        <a class=\"nav-item nav-link \" routerLink=\"/login\">\r\n          Login\r\n        </a>\r\n        <a class=\"nav-item nav-link \" routerLink=\"/register\">\r\n          Register\r\n        </a>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</nav>\r\n",
    "import {Component, Input, OnInit} from '@angular/core';\r\nimport {JwtResponse} from \"../../response/JwtResponse\";\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.css']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\r\n  @Input() currentPage: any;\r\n  currentUser: JwtResponse;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  counter(i = 1) {\r\n    return new Array(i);\r\n  }\r\n}\r\n",
    "<div class=\"col-md-12 column\">\r\n  <ul class=\"pagination justify-content-end\" *ngIf=\"currentUser; else noUser\">\r\n\r\n    <li class=\"page-item\" *ngIf=\"currentPage?.number > 0; else prev\">\r\n      <a\r\n        class=\"page-link\"\r\n        [routerLink]=\"['./']\"\r\n        [queryParams]=\"{ page: currentPage?.number, size: currentPage?.size }\"\r\n      >Previous</a\r\n      >\r\n    </li>\r\n    <ng-template #prev>\r\n      <li class=\"page-item  disabled\"><a class=\"page-link\">Previous</a></li>\r\n    </ng-template>\r\n\r\n    <ng-container *ngFor=\"let item of counter(currentPage?.totalPages); let i = index\">\r\n      <li class=\"page-item\" *ngIf=\"currentPage && currentPage.number != i; else active\">\r\n        <a class=\"page-link \"\r\n           routerLink=\"./\"\r\n           [queryParams]=\"{ page: i + 1, size: currentPage?.size }\"\r\n        >{{ i + 1 }}</a\r\n        >\r\n      </li>\r\n      <ng-template #active>\r\n        <li\r\n          class=\"page-item active \"\r\n\r\n        >\r\n          <button class=\"page-link \" disabled>{{ i + 1 }}</button>\r\n        </li>\r\n      </ng-template>\r\n    </ng-container>\r\n\r\n    <li\r\n      class=\"page-item\"\r\n      *ngIf=\"currentPage?.number + 1 < currentPage?.totalPages; else next\"\r\n    >\r\n      <a\r\n        class=\"page-link\"\r\n        [routerLink]=\"['./']\"\r\n        [queryParams]=\"{\r\n          page: currentPage?.number + 2,\r\n          size: currentPage?.size\r\n        }\"\r\n      >Next</a\r\n      >\r\n    </li>\r\n    <ng-template #next>\r\n      <li class=\"page-item disabled \"><a class=\"page-link\">Next</a></li>\r\n    </ng-template>\r\n  </ul>\r\n  <ng-template #noUser>\r\n\r\n  </ng-template>\r\n</div>\r\n",
    "import {Injectable} from \"@angular/core\";\r\nimport {apiUrl} from \"../../environments/environment\";\r\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\r\nimport {Item} from \"../models/Item\";\r\nimport {JwtResponse} from \"../response/JwtResponse\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {UserService} from \"./user.service\";\r\nimport {ProductInOrder} from \"../models/ProductInOrder\";\r\nimport {Cart} from \"../models/Cart\";\r\nimport {catchError, map, tap} from \"rxjs/operators\";\r\nimport {CookieService} from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n\r\n  private cartUrl = `${apiUrl}/cart`;\r\n\r\n  localMap = {};\r\n\r\n\r\n  private itemsSubject: BehaviorSubject<Item[]>;\r\n  private totalSubject: BehaviorSubject<number>;\r\n  public items: Observable<Item[]>;\r\n  public total: Observable<number>;\r\n\r\n\r\n  private currentUser: JwtResponse;\r\n\r\n  constructor(private http: HttpClient,\r\n              private cookieService: CookieService,\r\n              private userService: UserService) {\r\n    this.itemsSubject = new BehaviorSubject<Item[]>(null);\r\n    this.items = this.itemsSubject.asObservable();\r\n    this.totalSubject = new BehaviorSubject<number>(null);\r\n    this.total = this.totalSubject.asObservable();\r\n    this.userService.currentUser.subscribe(user => this.currentUser = user);\r\n\r\n\r\n  }\r\n\r\n  private getLocalCart(): ProductInOrder[] {\r\n    if (this.cookieService.check('cart')) {\r\n      this.localMap = JSON.parse(this.cookieService.get('cart'));\r\n      return Object.values(this.localMap);\r\n    } else {\r\n      this.localMap = {};\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getCart(): Observable<ProductInOrder[]> {\r\n    const localCart = this.getLocalCart();\r\n    if (this.currentUser) {\r\n      if (localCart.length > 0) {\r\n        return this.http.post<Cart>(this.cartUrl, localCart).pipe(\r\n          tap(_ => {\r\n            this.clearLocalCart();\r\n          }),\r\n          map(cart => cart.products),\r\n          catchError(_ => of([]))\r\n        );\r\n      } else {\r\n        return this.http.get<Cart>(this.cartUrl).pipe(\r\n          map(cart => cart.products),\r\n          catchError(_ => of([]))\r\n        );\r\n      }\r\n    } else {\r\n      return of(localCart);\r\n    }\r\n  }\r\n\r\n  addItem(productInOrder): Observable<boolean> {\r\n    if (!this.currentUser) {\r\n      if (this.cookieService.check('cart')) {\r\n        this.localMap = JSON.parse(this.cookieService.get('cart'));\r\n      }\r\n      if (!this.localMap[productInOrder.productId]) {\r\n        this.localMap[productInOrder.productId] = productInOrder;\r\n      } else {\r\n        this.localMap[productInOrder.productId].count += productInOrder.count;\r\n      }\r\n      this.cookieService.set('cart', JSON.stringify(this.localMap));\r\n      return of(true);\r\n    } else {\r\n      const url = `${this.cartUrl}/add`;\r\n      return this.http.post<boolean>(url, {\r\n        'quantity': productInOrder.count,\r\n        'productId': productInOrder.productId\r\n      });\r\n    }\r\n  }\r\n\r\n  update(productInOrder): Observable<ProductInOrder> {\r\n\r\n    if (this.currentUser) {\r\n      const url = `${this.cartUrl}/${productInOrder.productId}`;\r\n      return this.http.put<ProductInOrder>(url, productInOrder.count);\r\n    }\r\n  }\r\n\r\n\r\n  remove(productInOrder) {\r\n    if (!this.currentUser) {\r\n      delete this.localMap[productInOrder.productId];\r\n      return of(null);\r\n    } else {\r\n      const url = `${this.cartUrl}/${productInOrder.productId}`;\r\n      return this.http.delete(url).pipe();\r\n    }\r\n  }\r\n\r\n\r\n  checkout(): Observable<any> {\r\n    const url = `${this.cartUrl}/checkout`;\r\n    return this.http.post(url, null).pipe();\r\n  }\r\n\r\n  storeLocalCart() {\r\n    this.cookieService.set('cart', JSON.stringify(this.localMap));\r\n  }\r\n\r\n  clearLocalCart() {\r\n    console.log('clear local cart');\r\n    this.cookieService.delete('cart');\r\n    this.localMap = {};\r\n  }\r\n\r\n}\r\n",
    "import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {Order} from \"../models/Order\";\r\nimport {apiUrl} from \"../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  private orderUrl = `${apiUrl}/order`;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getPage(page = 1, size = 10): Observable<any> {\r\n    return this.http.get(`${this.orderUrl}?page=${page}&size=${size}`).pipe();\r\n  }\r\n\r\n  show(id): Observable<Order> {\r\n    return this.http.get<Order>(`${this.orderUrl}/${id}`).pipe(\r\n      catchError(_ => of(null))\r\n    );\r\n  }\r\n\r\n  cancel(id): Observable<Order> {\r\n    return this.http.patch<Order>(`${this.orderUrl}/cancel/${id}`, null).pipe(\r\n      catchError(_ => of(null))\r\n    );\r\n  }\r\n\r\n  finish(id): Observable<Order> {\r\n    return this.http.patch<Order>(`${this.orderUrl}/finish/${id}`, null).pipe(\r\n      catchError(_ => of(null))\r\n    );\r\n  }\r\n}\r\n",
    "import {Injectable} from \"@angular/core\";\r\nimport {apiUrl} from \"../../environments/environment\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {ProductInfo} from \"../models/productInfo\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  private productUrl = `${apiUrl}/product`;\r\n  private categoryUrl = `${apiUrl}/category`;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllInPage(page: number, size: number): Observable<any> {\r\n    const url = `${this.productUrl}?page=${page}&size=${size}`;\r\n    return this.http.get(url)\r\n      .pipe(\r\n        // tap(_ => console.log(_)),\r\n      )\r\n  }\r\n\r\n  getCategoryInPage(categoryType: number, page: number, size: number): Observable<any> {\r\n    const url = `${this.categoryUrl}/${categoryType}?page=${page}&size=${size}`;\r\n    return this.http.get(url).pipe(\r\n      // tap(data => console.log(data))\r\n    );\r\n  }\r\n\r\n  getDetail(id: String): Observable<ProductInfo> {\r\n    const url = `${this.productUrl}/${id}`;\r\n    return this.http.get<ProductInfo>(url).pipe(\r\n      catchError(_ => {\r\n        console.log(\"Get Detail Failed\");\r\n        return of(new ProductInfo());\r\n      })\r\n    );\r\n  }\r\n\r\n  update(productInfo: ProductInfo): Observable<ProductInfo> {\r\n    const url = `${apiUrl}/seller/product/${productInfo.productId}/edit`;\r\n    return this.http.put<ProductInfo>(url, productInfo);\r\n  }\r\n\r\n  create(productInfo: ProductInfo): Observable<ProductInfo> {\r\n    const url = `${apiUrl}/seller/product/new`;\r\n    return this.http.post<ProductInfo>(url, productInfo);\r\n  }\r\n\r\n\r\n  delelte(productInfo: ProductInfo): Observable<any> {\r\n    const url = `${apiUrl}/seller/product/${productInfo.productId}/delete`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      console.error(error); // log to console instead\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n",
    "import {User} from \"../models/User\";\r\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {JwtResponse} from \"../response/JwtResponse\";\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {apiUrl} from \"../../environments/environment\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private currentUserSubject: BehaviorSubject<JwtResponse>;\r\n  public currentUser: Observable<JwtResponse>;\r\n  public nameTerms = new Subject<string>();\r\n  public name$ = this.nameTerms.asObservable();\r\n\r\n  constructor(private http: HttpClient,\r\n              private cookieService: CookieService) {\r\n    const memo = localStorage.getItem('currentUser');\r\n    this.currentUserSubject = new BehaviorSubject<JwtResponse>(JSON.parse(memo));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n    cookieService.set('currentUser', memo);\r\n  }\r\n\r\n  get currentUserValue() {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n\r\n  login(loginForm): Observable<JwtResponse> {\r\n    const url = `${apiUrl}/login`;\r\n    return this.http.post<JwtResponse>(url, loginForm).pipe(\r\n      tap(user => {\r\n        if (user && user.token) {\r\n          this.cookieService.set('currentUser', JSON.stringify(user));\r\n          if (loginForm.remembered) {\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n          }\r\n          console.log((user.name));\r\n          this.nameTerms.next(user.name);\r\n          this.currentUserSubject.next(user);\r\n          return user;\r\n        }\r\n      }),\r\n      catchError(this.handleError('Login Failed', null))\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.currentUserSubject.next(null);\r\n    localStorage.removeItem('currentUser');\r\n    this.cookieService.delete('currentUser');\r\n  }\r\n\r\n  signUp(user: User): Observable<User> {\r\n    const url = `${apiUrl}/register`;\r\n    return this.http.post<User>(url, user);\r\n  }\r\n\r\n  update(user: User): Observable<User> {\r\n    const url = `${apiUrl}/profile`;\r\n    return this.http.put<User>(url, user);\r\n  }\r\n\r\n  get(email: string): Observable<User> {\r\n    const url = `${apiUrl}/profile/${email}`;\r\n    return this.http.get<User>(url);\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      console.log(error); // log to console instead\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n",
    "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\nexport const apiUrl = '//localhost:8080/api';\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n",
    "import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"
  ]
}