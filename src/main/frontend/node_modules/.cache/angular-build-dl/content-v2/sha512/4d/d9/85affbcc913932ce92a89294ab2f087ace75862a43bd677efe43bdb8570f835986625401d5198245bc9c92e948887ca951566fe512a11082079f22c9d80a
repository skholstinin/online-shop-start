{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_guards/auth.guard.ts","./src/app/_interceptors/error-interceptor.service.ts","./src/app/_interceptors/jwt-interceptor.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/enum/OrderStatus.ts","./src/app/enum/Role.ts","./src/app/models/ProductInOrder.ts","./src/app/models/User.ts","./src/app/models/productInfo.ts","./src/app/pages/card/card.component.ts","./src/app/pages/card/card.component.html","./src/app/pages/cart/cart.component.ts","./src/app/pages/cart/cart.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/order-detail/order-detail.component.ts","./src/app/pages/order-detail/order-detail.component.html","./src/app/pages/order/order.component.ts","./src/app/pages/order/order.component.html","./src/app/pages/product-detail/detail.component.ts","./src/app/pages/product-detail/detail.component.html","./src/app/pages/product-edit/product-edit.component.ts","./src/app/pages/product-edit/product-edit.component.html","./src/app/pages/product-list/product.list.component.ts","./src/app/pages/product-list/product.list.component.html","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/pages/user-edit/user-detail.component.ts","./src/app/pages/user-edit/user-detail.component.html","./src/app/parts/navigation/navigation.component.ts","./src/app/parts/navigation/navigation.component.html","./src/app/parts/pagination/pagination.component.ts","./src/app/parts/pagination/pagination.component.html","./src/app/services/cart.service.ts","./src/app/services/order.service.ts","./src/app/services/product.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Injectable} from \"@angular/core\";\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {UserService} from \"../services/user.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    const currentUser = this.userService.currentUserValue;\n    if (currentUser) {\n      // check if route is restricted by role\n      if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n        console.log(currentUser.role + \"fail in \" + route.data.roles);\n        // role not authorised so redirect to home page\n        this.router.navigate(['/']);\n        return false;\n      }\n      // authorised so return true\n      return true;\n    }\n\n    console.log(\"Need log in\");\n    // not logged in so redirect to login page with the return url{queryParams: {returnUrl: state.url}}\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {UserService} from \"../services/user.service\";\nimport {Router} from \"@angular/router\";\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private userService: UserService,\n              private router: Router) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        this.userService.logout();\n        this.router.navigate(['/login']);\n      }\n      if (err.status === 400) {\n        this.router.navigate(['/index'])\n      }\n\n      const error = err.error || err.statusText;\n      return throwError(error);\n    }))\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {UserService} from \"../services/user.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptor implements HttpInterceptor {\n\n\n  constructor(private userService: UserService,\n  ) {\n\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    const currentUser = this.userService.currentUserValue;\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `${currentUser.type} ${currentUser.token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CardComponent} from './pages/card/card.component';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {AuthGuard} from \"./_guards/auth.guard\";\nimport {OrderComponent} from \"./pages/order/order.component\";\nimport {OrderDetailComponent} from \"./pages/order-detail/order-detail.component\";\nimport {ProductListComponent} from \"./pages/product-list/product.list.component\";\nimport {UserDetailComponent} from \"./pages/user-edit/user-detail.component\";\nimport {ProductEditComponent} from \"./pages/product-edit/product-edit.component\";\nimport {Role} from \"./enum/Role\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/product', pathMatch: 'full'},\n  {path: 'product/:id', component: DetailComponent},\n  {path: 'category/:id', component: CardComponent},\n  {path: 'product', component: CardComponent},\n  {path: 'category', component: CardComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'logout', component: LoginComponent},\n  {path: 'register', component: SignupComponent},\n  {path: 'cart', component: CartComponent},\n  {path: 'success', component: SignupComponent},\n  {path: 'order/:id', component: OrderDetailComponent, canActivate: [AuthGuard]},\n  {path: 'order', component: OrderComponent, canActivate: [AuthGuard]},\n  {path: 'seller', redirectTo: 'seller/product', pathMatch: 'full'},\n  {\n    path: 'seller/product',\n    component: ProductListComponent,\n    canActivate: [AuthGuard],\n    data: {roles: [Role.Customer, Role.Seller]}\n  },\n  {\n    path: 'profile',\n    component: UserDetailComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'seller/product/:id/edit',\n    component: ProductEditComponent,\n    canActivate: [AuthGuard],\n    data: {roles: [Role.Customer, Role.Seller]}\n  },\n  {\n    path: 'seller/product/:id/new',\n    component: ProductEditComponent,\n    canActivate: [AuthGuard],\n    data: {roles: [Role.Customer]}\n  },\n\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    // [RouterModule.forRoot(routes, {useHash: true})]\n    RouterModule.forRoot(routes)//{onSameUrlNavigation: 'reload'}\n  ],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Simple shop';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div class=\"container\">\n  <app-navigation></app-navigation>\n  <router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\n\nimport {AppComponent} from './app.component';\nimport {CardComponent} from './pages/card/card.component';\nimport {PaginationComponent} from './parts/pagination/pagination.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {FormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {CookieService} from \"ngx-cookie-service\";\nimport {ErrorInterceptor} from \"./_interceptors/error-interceptor.service\";\nimport {JwtInterceptor} from \"./_interceptors/jwt-interceptor.service\";\nimport {OrderComponent} from './pages/order/order.component';\nimport {OrderDetailComponent} from './pages/order-detail/order-detail.component';\nimport {ProductListComponent} from './pages/product-list/product.list.component';\nimport {UserDetailComponent} from './pages/user-edit/user-detail.component';\nimport {ProductEditComponent} from './pages/product-edit/product-edit.component';\nimport {NavigationComponent} from \"./parts/navigation/navigation.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    CardComponent,\n    PaginationComponent,\n    LoginComponent,\n    SignupComponent,\n    DetailComponent,\n    CartComponent,\n    OrderComponent,\n    OrderDetailComponent,\n    ProductListComponent,\n    UserDetailComponent,\n    ProductEditComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n\n  ],\n  providers: [CookieService,\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export enum OrderStatus {\n  \"New\",\n  \"Finished\",\n  \"Cenceled\"\n}\n","export enum Role {\n  Customer = 'ROLE_CUSTOMER',\n  Seller = 'ROLE_ADMIN'\n}\n","import {ProductInfo} from \"./productInfo\";\n\nexport class ProductInOrder {\n  productId: string;\n  productName: string;\n  productPrice: number;\n  productStock: number;\n  productDescription: string;\n  productIcon: string;\n  count: number;\n\n  constructor(productInfo: ProductInfo, quantity = 1) {\n    this.productId = productInfo.productId;\n    this.productName = productInfo.productName;\n    this.productPrice = productInfo.productPrice;\n    this.productStock = productInfo.productStock;\n    this.productDescription = productInfo.productDescription;\n    ;\n    this.productIcon = productInfo.productIcon;\n    this.count = quantity;\n  }\n}\n","import {Role} from \"../enum/Role\";\n\nexport class User {\n\n  email: string;\n\n  password: string;\n\n  name: string;\n\n  phone: string;\n\n  address: string;\n\n  active: boolean;\n\n  role: string;\n\n  constructor() {\n    this.active = true;\n    this.role = Role.Customer;\n  }\n}\n","import {ProductInOrder} from \"./ProductInOrder\";\n\nexport class ProductInfo {\n  productId: string;\n  productName: string;\n  productPrice: number;\n  productStock: number;\n  productDescription: string;\n  productIcon: string;\n  productStatus: number; // 0: onsale 1: offsale\n  createTime: string;\n  updateTime: string;\n\n\n  constructor(productInOrder?: ProductInOrder) {\n    if (productInOrder) {\n      this.productId = productInOrder.productId;\n      this.productName = productInOrder.productName;\n      this.productPrice = productInOrder.productPrice;\n      this.productStock = productInOrder.productStock;\n      this.productDescription = productInOrder.productDescription;\n      this.productIcon = productInOrder.productIcon;\n      this.productStatus = 0;\n    } else {\n      this.productId = '';\n      this.productName = '';\n      this.productPrice = 20;\n      this.productStock = 100;\n      this.productDescription = '';\n      this.productIcon = '';\n      this.productStatus = 0;\n    }\n  }\n}\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\n// import {prod, products} from '../shared/mockData';\nimport {ProductService} from '../../services/product.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit, OnDestroy {\n\n\n  title: string;\n  page: any;\n  private paramSub: Subscription;\n  private querySub: Subscription;\n\n\n  constructor(private productService: ProductService,\n              private route: ActivatedRoute) {\n\n  }\n\n\n  ngOnInit() {\n    this.querySub = this.route.queryParams.subscribe(() => {\n      this.update();\n    });\n    this.paramSub = this.route.params.subscribe(() => {\n      this.update();\n    });\n\n  }\n\n  ngOnDestroy(): void {\n    this.querySub.unsubscribe();\n    this.paramSub.unsubscribe();\n  }\n\n  update() {\n    if (this.route.snapshot.queryParamMap.get('page')) {\n      const currentPage = +this.route.snapshot.queryParamMap.get('page');\n      const size = +this.route.snapshot.queryParamMap.get('size');\n      this.getProds(currentPage, size);\n    } else {\n      this.getProds();\n    }\n  }\n\n  getProds(page: number = 1, size: number = 3) {\n    if (this.route.snapshot.url.length == 1) {\n      this.productService.getAllInPage(+page, +size)\n        .subscribe(page => {\n          this.page = page;\n          this.title = 'Get Whatever You Want!';\n        });\n    } else { //  /category/:id\n      const type = this.route.snapshot.url[1].path;\n      this.productService.getCategoryInPage(+type, page, size)\n        .subscribe(categoryPage => {\n          this.title = categoryPage.category;\n          this.page = categoryPage.page;\n        });\n    }\n\n  }\n\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">{{title}}</h1>\n<div class=\"row card-deck text-center\">\n  <div *ngFor=\"let productInfo of page?.content\" class=\"col-lg-4 \">\n    <div class=\"card mb-4\">\n      <img height=\"50%\" class=\"card-img-top\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title \">{{productInfo.productName}}</h4>\n        <div class=\"text-left\">\n          <p class=\"card-test\"><strong>Description: </strong>{{productInfo.productDescription}}</p>\n          <p class=\"card-text\"><strong>Price: </strong>{{productInfo.productPrice | currency}}</p>\n          <p class=\"card-text\"><strong>Stock: </strong>{{productInfo.productStock}}</p>\n        </div>\n        <br>\n        <a routerLink=\"/product/{{productInfo.productId}}\" *ngIf=\"productInfo.productStatus == 0; else offBlock\"\n           class=\"btn btn-primary btn-lg\"\n        >Get It!</a>\n        <ng-template #offBlock><a class=\"btn btn-secondary btn-lg disabled\">Unavailable</a></ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n<app-pagination [currentPage]=\"page\"></app-pagination>\n","import {AfterContentChecked, Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {CartService} from \"../../services/cart.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Subject, Subscription} from \"rxjs\";\nimport {ProductInOrder} from \"../../models/ProductInOrder\";\nimport {debounceTime, switchMap} from \"rxjs/operators\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit, OnDestroy, AfterContentChecked {\n\n  constructor(private cartService: CartService,\n              private userService: UserService,\n              private router: Router) {\n    this.userSubscription = this.userService.currentUser.subscribe(user => this.currentUser = user);\n  }\n\n  productInOrders = [];\n  total = 0;\n  currentUser: JwtResponse;\n  userSubscription: Subscription;\n\n  private updateTerms = new Subject<ProductInOrder>();\n  sub: Subscription;\n\n  static validateCount(productInOrder) {\n    const max = productInOrder.productStock;\n    if (productInOrder.count > max) {\n      productInOrder.count = max;\n    } else if (productInOrder.count < 1) {\n      productInOrder.count = 1;\n    }\n    console.log(productInOrder.count);\n  }\n\n  ngOnInit() {\n    this.cartService.getCart().subscribe(prods => {\n      this.productInOrders = prods;\n    });\n\n    this.sub = this.updateTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n      //\n      // ignore new term if same as previous term\n      // Same Object Reference, not working here\n      //  distinctUntilChanged((p: ProductInOrder, q: ProductInOrder) => p.count === q.count),\n      //\n      // switch to new search observable each time the term changes\n      switchMap((productInOrder: ProductInOrder) => this.cartService.update(productInOrder))\n    ).subscribe(prod => {\n        if (prod) {\n          throw new Error();\n        }\n      },\n      _ => console.log('Update Item Failed'));\n  }\n\n  ngOnDestroy() {\n    if (!this.currentUser) {\n      this.cartService.storeLocalCart();\n    }\n    this.userSubscription.unsubscribe();\n  }\n\n  ngAfterContentChecked() {\n    this.total = this.productInOrders.reduce(\n      (prev, cur) => prev + cur.count * cur.productPrice, 0);\n  }\n\n  addOne(productInOrder) {\n    productInOrder.count++;\n    CartComponent.validateCount(productInOrder);\n    if (this.currentUser) {\n      this.updateTerms.next(productInOrder);\n    }\n  }\n\n  minusOne(productInOrder) {\n    productInOrder.count--;\n    CartComponent.validateCount(productInOrder);\n    if (this.currentUser) {\n      this.updateTerms.next(productInOrder);\n    }\n  }\n\n  onChange(productInOrder) {\n    CartComponent.validateCount(productInOrder);\n    if (this.currentUser) {\n      this.updateTerms.next(productInOrder);\n    }\n  }\n\n\n  remove(productInOrder: ProductInOrder) {\n    this.cartService.remove(productInOrder).subscribe(\n      success => {\n        this.productInOrders = this.productInOrders.filter(e => e.productId !== productInOrder.productId);\n        console.log('Cart: ' + this.productInOrders);\n      },\n      _ => console.log('Remove Cart Failed'));\n  }\n\n  checkout() {\n    if (!this.currentUser) {\n      this.router.navigate(['/login'], {queryParams: {returnUrl: this.router.url}});\n    } else if (this.currentUser.role !== Role.Customer) {\n      this.router.navigate(['/seller']);\n    } else {\n      this.cartService.checkout().subscribe(\n        _ => {\n          this.productInOrders = [];\n        },\n        error1 => {\n          console.log('Checkout Cart Failed');\n        });\n      this.router.navigate(['/']);\n    }\n\n  }\n}\n\n","<h1 align=\"center\" class=\"display-4 mb-5\">Your cart</h1>\n\n<!--Cart Detail Table-->\n<table class=\"table table-striped text-center\">\n  <thead>\n  <tr>\n    <th scope=\"col\">Photo</th>\n    <th scope=\"col\">Name</th>\n    <th scope=\"col\">Price</th>\n    <th scope=\"col\">Quantity</th>\n    <th scope=\"col\">Total</th>\n    <th scope=\"col\">Action</th>\n\n  </tr>\n  </thead>\n  <tbody>\n\n  <tr *ngFor=\"let productInOrder of productInOrders\">\n    <th class=\"align-middle\" scope=\"row\">\n      <a routerLink=\"/product/{{productInOrder.productId}}\"><img height=\"100px\"\n                                                                 src=\"{{productInOrder.productIcon}}\"\n                                                                 alt=\"{{productInOrder.productName}}\"></a>\n    </th>\n    <td class=\"align-middle\"><a\n      routerLink=\"/product/{{productInOrder.productId}}\">{{productInOrder.productName}}</a></td>\n    <td class=\"align-middle\">{{productInOrder.productPrice | currency}}</td>\n\n    <td class=\"align-middle\">\n      <a (click)=\"minusOne(productInOrder)\"><i class=\"fa fa-minus\"></i></a>\n      <input min=\"1\" id=\"{{productInOrder.productId}}\"\n             [max]=productInOrder.productStock\n             [(ngModel)]=\"productInOrder.count\"\n             (change)=\"onChange(productInOrder)\"\n             size=\"5\"\n             type=\"number\"\n             required\n             name='count'>\n      <a (click)=\"addOne(productInOrder)\"> <i class=\"fa fa-plus\"></i></a>\n    </td>\n\n    <td class=\"align-middle\">{{productInOrder.productPrice * productInOrder.count|currency}}</td>\n    <td class=\"align-middle\">\n      <a (click)=\"remove(productInOrder)\" routerLink=\"./\">Remove</a>\n    </td>\n\n  </tr>\n\n  </tbody>\n</table>\n\n<div *ngIf=\"productInOrders?.length > 0; else empty\">\n  <h5 style=\"display: inline;\">Total: {{total | currency}}</h5>\n  <button (click)=\"checkout()\" class=\"btn btn-warning float-right\">Checkout</button>\n</div>\n<ng-template #empty>\n  <h4 class=\"text-muted text-center\">Empty</h4>\n</ng-template>\n\n\n","import {Component, OnInit} from \"@angular/core\";\nimport {UserService} from \"../../services/user.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isInvalid: boolean;\n  isLogout: boolean;\n  submitted = false;\n  model: any = {\n    username: '',\n    password: '',\n    remembered: false\n  };\n\n  returnUrl = '/';\n\n  constructor(private userService: UserService,\n              private router: Router,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    let params = this.route.snapshot.queryParamMap;\n    this.isLogout = params.has('logout');\n    this.returnUrl = params.get('returnUrl');\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.userService.login(this.model).subscribe(\n      user => {\n        if (user) {\n          if (user.role != Role.Customer) {\n            this.returnUrl = '/seller';\n          }\n\n          this.router.navigateByUrl(this.returnUrl);\n        } else {\n          this.isLogout = false;\n          this.isInvalid = true;\n        }\n\n      }\n    );\n  }\n\n  fillLoginFields(u, p) {\n    this.model.username = u;\n    this.model.password = p;\n    this.onSubmit();\n  }\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Sign In</h1>\n<div style=\"width:40%; margin: 25px auto\">\n\n  <div class=\"alert alert-danger\" *ngIf=\"isInvalid\">\n    Invalid username and password.\n  </div>\n  <div class=\"alert alert-info\" *ngIf=\"isLogout\">\n    You have been logged out.\n  </div>\n\n\n  <form #form='ngForm' (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label>Email address</label>\n      <input type=\"text\" class=\"form-control form-control-lg\" id=\"email\" name=\"email\" placeholder=\"Enter email\"\n             required autofocus [(ngModel)]=\"model.username\" #email=\"ngModel\" autocomplete=\"email\">\n      <div [hidden]=\"email.valid || email.pristine\" class=\"alert alert-danger\">\n        Email is required\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\" class=\"form-control form-control-lg\" id=\"password\" name=\"password\" autocomplete=\"password\"\n             placeholder=\"Password\" required [(ngModel)]=\"model.password\" #password='ngModel'>\n      <div [hidden]=\"password.valid || password.pristine\" class=\"alert alert-danger\">\n        Email is required\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <div>\n        <input type=\"checkbox\" id=\"remember_me\" name=\"remember-me\" [(ngModel)]=\"model.remembered\">\n        <label for=\"remember_me\" class=\"inline\">Remember me</label>\n        <a class=\"float-right\" routerLink=\"/register\">Sign Up</a>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <button [disabled]=\"!form.form.valid\" type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign In</button>\n    </div>\n  </form>\n\n\n  <strong>Sample Users</strong>\n  <table style=\"width: 100%;\" id=\"sampleLoginTable\">\n    <tr>\n      <td><a\n        (click)=\"fillLoginFields('customer1@mail.com','123')\"\n        href=\"javascript:void(0)\">customer1</a></td>\n    </tr>\n  </table>\n\n</div>\n","import {Component, OnInit} from \"@angular/core\";\nimport {OrderService} from \"../../services/order.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Order} from \"../../models/Order\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit {\n\n  constructor(private orderService: OrderService,\n              private route: ActivatedRoute) {\n  }\n\n  order$: Observable<Order>;\n\n  ngOnInit() {\n    // this.items$ = this.route.paramMap.pipe(\n    //     map(paramMap =>paramMap.get('id')),\n    //     switchMap((id:string) => this.orderService.show(id))\n    // )\n    this.order$ = this.orderService.show(this.route.snapshot.paramMap.get('id'));\n  }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Order Detail</h1>\n<table class=\"table table-striped text-center\">\n  <thead>\n  <tr>\n    <th scope=\"col\">Photo</th>\n    <th scope=\"col\">Name</th>\n    <th scope=\"col\">Description</th>\n    <th scope=\"col\">Price</th>\n    <th scope=\"col\">Quantity</th>\n    <th scope=\"col\">Subtotal</th>\n\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let item of (order$ | async)?.products\">\n    <th class=\"align-middle\" scope=\"row\">\n      <a routerLink=\"/seller/product/{{item.productId}}/edit\"><img height=\"100px\" src=\"{{item.productIcon}}\"\n                                                                   alt=\"{{item.productName}}\"></a>\n    </th>\n    <td class=\"align-middle\"><a routerLink=\"/seller/product/{{item.productId}}/edit\">{{item.productName}}</a></td>\n    <td class=\"align-middle\">{{item.productDescription}}</td>\n    <td class=\"align-middle\">{{item.productPrice | currency}}</td>\n    <td class=\"align-middle\">{{item.count}}</td>\n    <td class=\"align-middle\">{{(item.productPrice * item.count | currency)}}</td>\n  </tr>\n  </tbody>\n</table>\n<h5 style=\"display: inline\" class=\"float-right\">Total: {{(order$ | async)?.orderAmount | currency}}</h5>\n","import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {OrderService} from \"../../services/order.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {Order} from \"../../models/Order\";\nimport {OrderStatus} from \"../../enum/OrderStatus\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit, OnDestroy {\n\n  page: any;\n  OrderStatus = OrderStatus;\n  currentUser: JwtResponse;\n  Role = Role;\n\n  constructor(private httpClient: HttpClient,\n              private orderService: OrderService,\n              private userService: UserService,\n              private route: ActivatedRoute\n  ) {\n  }\n\n  querySub: Subscription;\n\n  ngOnInit() {\n    this.currentUser = this.userService.currentUserValue;\n    this.querySub = this.route.queryParams.subscribe(() => {\n      this.update();\n    });\n\n  }\n\n  update() {\n    let nextPage = 1;\n    let size = 10;\n    if (this.route.snapshot.queryParamMap.get('page')) {\n      nextPage = +this.route.snapshot.queryParamMap.get('page');\n      size = +this.route.snapshot.queryParamMap.get('size');\n    }\n    this.orderService.getPage(nextPage, size).subscribe(page => this.page = page, _ => {\n      console.log(\"Get Orde Failed\")\n    });\n  }\n\n\n  cancel(order: Order) {\n    this.orderService.cancel(order.orderId).subscribe(res => {\n      if (res) {\n        order.orderStatus = res.orderStatus;\n      }\n    });\n  }\n\n  finish(order: Order) {\n    this.orderService.finish(order.orderId).subscribe(res => {\n      if (res) {\n        order.orderStatus = res.orderStatus;\n      }\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.querySub.unsubscribe();\n  }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Orders</h1>\n\n<table class=\"table table-striped text-center\">\n  <thead>\n  <tr>\n    <th scope=\"col\">Order #</th>\n    <th scope=\"col\">Customer Name</th>\n    <th scope=\"col\">Customer Email</th>\n    <th scope=\"col\">Customer phone</th>\n    <th scope=\"col\">Shipping Address</th>\n    <th scope=\"col\">Total</th>\n    <th scope=\"col\">Order Data</th>\n    <th scope=\"col\">Status</th>\n    <th scope=\"col\">Action</th>\n  </tr>\n  </thead>\n  <tbody>\n\n  <tr *ngFor=\"let order of page?.content\">\n    <th class=\"align-middle\" scope=\"row\">\n      {{order.orderId}}\n    </th>\n    <td class=\"align-middle\">{{order.buyerName}}</td>\n    <td class=\"align-middle\">{{order.buyerEmail}}</td>\n    <td class=\"align-middle\">{{order.buyerPhone}}</td>\n    <td class=\"align-middle\">{{order.buyerAddress}}</td>\n    <td class=\"align-middle\">{{order.orderAmount | currency}}</td>\n    <td class=\"align-middle\">{{order.createTime | date}}</td>\n    <td class=\"align-middle\">{{OrderStatus[order.orderStatus]}}</td>\n    <td class=\"align-middle\">\n      <a *ngIf=\"!(currentUser.role == Role.Customer && currentUser.name == order.buyerEmail)\"\n         style=\"display:\n            block\" href=\"\" routerLink=\"/order/{{order.orderId}}\">\n        Show</a>\n      <a *ngIf=\"order.orderStatus == 0\" style=\"display: block\" (click)=\"cancel(order)\" routerLink=\"./\">Cancel</a>\n      <a *ngIf=\"currentUser.role != Role.Customer && order.orderStatus == 0\"\n         style=\"display: block\"\n         (click)=\"finish(order)\"\n         routerLink=\"./\">\n        Finish</a>\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<app-pagination [currentPage]=\"page\"></app-pagination>\n","import {Component, OnInit} from '@angular/core';\nimport {ProductService} from '../../services/product.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CartService} from '../../services/cart.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {ProductInOrder} from '../../models/ProductInOrder';\nimport {ProductInfo} from '../../models/productInfo';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n  title: string;\n  count: number;\n  productInfo: ProductInfo;\n\n  constructor(\n    private productService: ProductService,\n    private cartService: CartService,\n    private cookieService: CookieService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.getProduct();\n    this.title = 'Product Detail';\n    this.count = 1;\n  }\n\n  // ngOnChanges(changes: SimpleChanges): void {\n  //   // Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n  //   // Add '${implements OnChanges}' to the class.\n  //   console.log(changes);\n  //   if (this.item.quantity in changes) {\n\n  //   }\n  // }\n\n  getProduct(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.productService.getDetail(id).subscribe(\n      prod => {\n        this.productInfo = prod;\n      },\n      _ => console.log('Get Cart Failed')\n    );\n  }\n\n  addToCart() {\n    this.cartService\n      .addItem(new ProductInOrder(this.productInfo, this.count))\n      .subscribe(\n        res => {\n          if (!res) {\n            console.log('Add Cart failed' + res);\n            throw new Error();\n          }\n          this.router.navigateByUrl('/cart');\n        },\n        _ => console.log('Add Cart Failed')\n      );\n  }\n\n  validateCount() {\n    console.log('Validate');\n    const max = this.productInfo.productStock;\n    if (this.count > max) {\n      this.count = max;\n    } else if (this.count < 1) {\n      this.count = 1;\n    }\n  }\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">{{title}}</h1>\n<div class=\"row text-center justify-content-center\">\n  <div class=\"col-lg-6 \">\n    <div class=\"card mb-4 \">\n      <img height=\"60%\" class=\"card-img-top\" src=\"{{productInfo?.productIcon}}\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title \">{{productInfo?.productName}}</h4>\n        <form name=\"form\" #form='ngForm' (ngSubmit)=\"productInfo?.productStatus == 0 && addToCart()\">\n          <div class=\"text-left\">\n            <input hidden name=\"productId\" [value]=productInfo?.productId>\n            <p class=\"card-test\"><strong>Description: </strong>{{productInfo?.productDescription}}</p>\n            <p class=\"card-text\">\n              <strong>Price: </strong>\n              <label id=\"price\">{{productInfo?.productPrice | currency}}</label>\n            </p>\n            <p class=\"card-text\"><strong>Stock: </strong>{{productInfo?.productStock}}</p>\n\n            <label class=\"card-text\">\n              <strong>Quantity: </strong>\n              <input [(ngModel)]=count\n                     (change)=\"validateCount()\"\n                     type=\"number\"\n                     name=\"count\"\n                     required\n                     min=\"1\"\n                     [max]=productInfo?.productStock\n              >\n            </label>\n\n\n            <p class=\"card-text\"><strong>Subtotal: </strong>\n              <label id=\"subtotal\">{{count * productInfo?.productPrice | currency}}</label>\n            </p>\n          </div>\n          <button type=\"submit\" [disabled]=\"!form.form.valid\" *ngIf=\"productInfo?.productStatus == 0; else offBlock\"\n                  class=\"btn btn-primary btn-lg\"\n          >Add to Cart\n          </button>\n          <ng-template #offBlock><a class=\"btn btn-secondary btn-lg disabled\">Unavailable</a></ng-template>\n        </form>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import {AfterContentChecked, Component, OnInit} from \"@angular/core\";\nimport {ProductInfo} from \"../../models/productInfo\";\nimport {ProductService} from \"../../services/product.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit, AfterContentChecked {\n\n  product = new ProductInfo();\n\n  constructor(private productService: ProductService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  productId: string;\n  isEdit = false;\n\n  ngOnInit() {\n    this.productId = this.route.snapshot.paramMap.get('id');\n    if (this.productId) {\n      this.isEdit = true;\n      this.productService.getDetail(this.productId).subscribe(prod => this.product = prod);\n    }\n\n  }\n\n  update() {\n    this.productService.update(this.product).subscribe(prod => {\n        if (!prod) throw new Error();\n        this.router.navigate(['/seller']);\n      },\n      err => {\n      });\n\n  }\n\n  onSubmit() {\n    if (this.productId) {\n      this.update();\n    } else {\n      this.add();\n    }\n  }\n\n  add() {\n    this.productService.create(this.product).subscribe(prod => {\n        if (!prod) throw new Error;\n        this.router.navigate(['/']);\n      },\n      e => {\n      });\n  }\n\n  ngAfterContentChecked(): void {\n    console.log(this.product);\n  }\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Edit Product</h1>\n<div style=\"width:40%; margin: 25px auto\">\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <!--Id-->\n    <div class=\"form-group\">\n      <label for=\"productId\">Code</label>\n      <input [readOnly]=\"isEdit\" [disabled]=\"isEdit\" [(ngModel)]=\"product.productId\" type=\"text\"\n             class=\"form-control form-control-lg\" #productIdInput\n             id=\"productId\" name=\"productId\" required #productId=\"ngModel\">\n      <div *ngIf=\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\">\n        <div *ngIf=\"productIdInput.errors.required\">\n          Name is required.\n        </div>\n      </div>\n    </div>\n    <!--Photo-->\n    <div class=\"form-group\">\n      <label>Photo Link</label>\n      <input [(ngModel)]=\"product.productIcon\" type=\"text\" class=\"form-control form-control-lg\" id=\"productIcon\"\n             name=\"productIcon\" placeholder=\"Photo\">\n    </div>\n\n    <!--Name-->\n    <div class=\"form-group\">\n      <label>Name</label>\n      <input [(ngModel)]=\"product.productName\" type=\"text\" class=\"form-control form-control-lg\" id=\"productName\"\n             #productName=\"ngModel\"\n             name=\"productName\" placeholder=\"Name\" required>\n    </div>\n    <div *ngIf=\"productName.invalid && (productName.dirty ||productName.touched)\">\n      <div *ngIf=\"productName.errors.required\">\n        Name is required.\n      </div>\n    </div>\n\n    <!--Description-->\n    <div class=\"form-group\">\n      <label>Description</label>\n      <textarea class=\"form-control form-control-lg text-left\"\n                id=\"productDescription\" name=\"productDescription\"\n                placeholder=\"Description\" [(ngModel)]=\"product.productDescription\"></textarea>\n    </div>\n    <!--Price-->\n    <div class=\"form-group\">\n      <label for=\"productPrice\">Price</label>\n      <input class=\"form-control form-control-lg\"\n             type=\"number\"\n             id=\"productPrice\"\n             name=\"productPrice\"\n             #productPrice=\"ngModel\"\n             [ngModel]=\"product.productPrice\" (ngModelChange)=\"product.productPrice=$event\"\n             required>\n      <div *ngIf=\"productPrice.invalid && (productPrice.dirty ||productPrice.touched)\">\n        <div *ngIf=\"productPrice.errors.required\">\n          Price is required.\n        </div>\n      </div>\n    </div>\n    <!--Stock-->\n    <div class=\"form-group\">\n      <label for=\"productStock\">Stock</label>\n      <input class=\"form-control form-control-lg\"\n             type=\"number\"\n             id=\"productStock\"\n             name=\"productStock\"\n             min=\"0\" #productStock=\"ngModel\"\n             [(ngModel)]=\"product.productStock\"\n             required>\n      <div *ngIf=\"productStock.invalid && (productStock.dirty ||productStock.touched)\">\n        <div *ngIf=\"productStock.errors.required\">\n          Stock is required.\n        </div>\n      </div>\n    </div>\n    <!--Status-->\n    <div class=\"form-group\">\n      <label for=\"productStatus\">Status</label>\n      <select class=\"custom-select custom-select-lg \" id=\"productStatus\" name=\"productStatus\" required\n              [(ngModel)]=\"product.productStatus\">\n        <option [ngValue]=0>Available</option>\n        <option [ngValue]=1>Unavailable</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <button type=\"submit\" [disabled]=\"!form.form.valid\" class=\"btn btn-lg btn-primary btn-block\">Submit</button>\n    </div>\n  </form>\n\n\n</div>\n","import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {UserService} from \"../../services/user.service\";\nimport {ProductService} from \"../../services/product.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Subscription} from \"rxjs\";\nimport {ProductInfo} from \"../../models/productInfo\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n  selector: 'app-product.list',\n  templateUrl: './product.list.component.html',\n  styleUrls: ['./product.list.component.css']\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n\n  constructor(private userService: UserService,\n              private productService: ProductService,\n              private route: ActivatedRoute) {\n  }\n\n  Role = Role;\n  currentUser: JwtResponse;\n  page: any;\n  // productStatus = this.productService.getAllInPage()\n  private querySub: Subscription;\n\n  ngOnInit() {\n    this.querySub = this.route.queryParams.subscribe(() => {\n      this.update();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.querySub.unsubscribe();\n  }\n\n  update() {\n    if (this.route.snapshot.queryParamMap.get('page')) {\n      const currentPage = +this.route.snapshot.queryParamMap.get('page');\n      const size = +this.route.snapshot.queryParamMap.get('size');\n      this.getProds(currentPage, size);\n    } else {\n      this.getProds();\n    }\n  }\n\n  getProds(page: number = 1, size: number = 5) {\n    this.productService.getAllInPage(+page, +size)\n      .subscribe(page => {\n        this.page = page;\n      });\n\n  }\n\n\n  remove(productInfos: ProductInfo[], productInfo) {\n    this.productService.delelte(productInfo).subscribe(_ => {\n        productInfos = productInfos.filter(e => e.productId != productInfo);\n      },\n      err => {\n      });\n  }\n\n\n}\n","<h1 align=\"center\" class=\"display-4 \">Products</h1>\n<a *ngIf=\"currentUser?.role == Role.Customer\" style=\"color: inherit\"\n   routerLink=\"/seller/product/new\" class=\"float-right mb-3\"><i class=\"fas fa-plus fa-2x\">Add</i>\n</a>\n<table id=\"table\" class=\"table table-striped text-center\" style=\"width:100%;\">\n  <thead>\n  <tr>\n    <th scope=\"col\">Photo</th>\n    <th scope=\"col\">Code</th>\n    <th scope=\"col\">Name</th>\n    <th scope=\"col\">Type</th>\n    <th scope=\"col\">Description</th>\n    <th scope=\"col\">Price</th>\n    <th scope=\"col\">Stock</th>\n    <th scope=\"col\">Status</th>\n    <th scope=\"col\">Action</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let productInfo of page?.content\">\n    <th class=\"align-middle\" scope=\"row\">\n      <img height=\"100px\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\n    </th>\n    <td class=\"align-middle\">{{productInfo.productId}}</td>\n    <td class=\"align-middle\">{{productInfo.productName}}</td>\n    <td class=\"align-middle\">{{productInfo.productDescription}}</td>\n    <td class=\"align-middle\">{{productInfo.productPrice | currency}}</td>\n    <td class=\"align-middle\">{{productInfo.productStock}}</td>\n    <!--        <td class=\"align-middle\">{{ProductStatus[productInfo.productStatus]}}</td>-->\n    <td class=\"align-middle\">\n      <a style=\"display: block\" routerLink=\"/seller/product/{{productInfo.productId}}/edit\">\n        Edit</a>\n\n      <a *ngIf=\"currentUser?.role == Role.Customer\" style=\"display: block\"\n         (click)=\"remove(page.content, productInfo.productId)\" routerLink=\"./\">\n        Remove</a>\n    </td>\n\n  </tbody>\n</table>\n<app-pagination [currentPage]=\"page\"></app-pagination>\n","import {Component, OnInit} from \"@angular/core\";\nimport {User} from \"../../models/User\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user: User;\n\n  constructor(private location: Location,\n              private userService: UserService,\n              private router: Router) {\n    this.user = new User();\n\n  }\n\n\n  ngOnInit() {\n\n\n  }\n\n  onSubmit() {\n    this.userService.signUp(this.user).subscribe(u => {\n        this.router.navigate(['/login']);\n      },\n      e => {\n      });\n  }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Sign Up</h1>\n<div style=\"width:40%; margin: 25px auto\">\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label><b>Email address</b></label>\n      <input [(ngModel)]=\"user.email\" type=\"email\" class=\"form-control form-control-lg\" id=\"email\" name=\"email\"\n             placeholder=\"Enter email\" email required autofocus #email=\"ngModel\">\n      <div *ngIf=\"email.invalid && (email.dirty ||email.touched)\">\n        <div *ngIf=\"email.errors.required\">\n          Email is required.\n        </div>\n        <div *ngIf=\"email.errors.email\">\n          Invalid Email.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Name</b></label>\n      <input [(ngModel)]=\"user.name\" type=\"text\" class=\"form-control form-control-lg\" id=\"name\" name=\"name\"\n             placeholder=\"Your name\" required #name=\"ngModel\">\n      <div *ngIf=\"name.invalid && (name.dirty ||name.touched)\">\n        <div *ngIf=\"name.errors.required\">\n          Name is required.\n        </div>\n        <div *ngIf=\"name.errors.minlength\">\n          Name must be at least 3 characters long.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Password</b></label>\n      <input [(ngModel)]=\"user.password\" type=\"password\" class=\"form-control form-control-lg\" id=\"password\"\n             name=\"password\" placeholder=\"Password\" minlength=\"3\" required #password=\"ngModel\">\n      <div *ngIf=\"password.invalid && (password.dirty ||password.touched)\">\n        <div *ngIf=\"password.errors.required\">\n          Password is required.\n        </div>\n        <div *ngIf=\"password.errors.minlength\">\n          Password must be at least 3 characters long.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Phone</b></label>\n      <input [(ngModel)]=\"user.phone\" type=\"text\" class=\"form-control form-control-lg\" id=\"phone\" name=\"phone\"\n             placeholder=\"Phone\" required #phone=\"ngModel\">\n      <div *ngIf=\"phone.invalid && (phone.dirty ||phone.touched)\">\n        <div *ngIf=\"phone.errors.required\">\n          Phone is required.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Address</b></label>\n      <input [(ngModel)]=\"user.address\" type=\"text\" class=\"form-control form-control-lg\" id=\"address\" name=\"address\"\n             placeholder=\"Address\" required #address=\"ngModel\">\n      <div *ngIf=\"address.invalid && (address.dirty ||address.touched)\">\n        <div *ngIf=\"address.errors.required\">\n          Address is required.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!form.form.valid\">Sign Up</button>\n    </div>\n  </form>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {User} from \"../../models/User\";\nimport {Router} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n\n  constructor(private userService: UserService,\n              private router: Router) {\n  }\n\n  user = new User();\n\n\n  ngOnInit() {\n    const account = this.userService.currentUserValue.account;\n\n    this.userService.get(account).subscribe(u => {\n      this.user = u;\n      this.user.password = '';\n    }, e => {\n\n    });\n  }\n\n  onSubmit() {\n    this.userService.update(this.user).subscribe(u => {\n      this.userService.nameTerms.next(u.name);\n      let url = '/';\n      if (this.user.role != Role.Customer) {\n        url = '/seller';\n      }\n      this.router.navigateByUrl(url);\n    }, _ => {\n    })\n  }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Edit Profiles</h1>\n<div style=\"width:40%; margin: 25px auto\">\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label><b>Email address</b></label>\n      <input readonly [value]=user?.email type=\"email\" class=\"form-control form-control-lg \" disabled id=\"email\"\n             name=\"email\" placeholder=\"Enter email\">\n    </div>\n    <div class=\"form-group\">\n      <label><b>Name</b></label>\n      <input [(ngModel)]=\"user.name\" type=\"text\" class=\"form-control form-control-lg\" id=\"name\" name=\"name\"\n             placeholder=\"Your name\" required #name=\"ngModel\" autofocus>\n      <div *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n        <div *ngIf=\"name.errors.required\">\n          Name is required.\n        </div>\n        <div *ngIf=\"name.errors.minlength\">\n          Name must be at least 3 characters long.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Password</b></label>\n      <input [(ngModel)]=\"user.password\" type=\"password\" class=\"form-control form-control-lg\" id=\"password\"\n             name=\"password\" placeholder=\"Password\" minlength=\"3\" required #password=\"ngModel\">\n      <div *ngIf=\"password.invalid && (password.dirty ||password.touched)\">\n        <div *ngIf=\"password.errors.required\">\n          Password is required.\n        </div>\n        <div *ngIf=\"password.errors.minlength\">\n          Password must be at least 3 characters long.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Phone</b></label>\n      <input [(ngModel)]=\"user.phone\" type=\"text\" class=\"form-control form-control-lg\" id=\"phone\" name=\"phone\"\n             placeholder=\"Phone\" required #phone=\"ngModel\">\n      <div *ngIf=\"phone.invalid && (phone.dirty ||phone.touched)\">\n        <div *ngIf=\"phone.errors.required\">\n          Phone is required.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Address</b></label>\n      <input [(ngModel)]=\"user.address\" type=\"text\" class=\"form-control form-control-lg\" id=\"address\" name=\"address\"\n             placeholder=\"Address\" required #address=\"ngModel\">\n      <div *ngIf=\"address.invalid && (address.dirty ||address.touched)\">\n        <div *ngIf=\"address.errors.required\">\n          Address is required.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!form.form.valid\">Update</button>\n    </div>\n  </form>\n</div>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {Subscription} from \"rxjs\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Router} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n\n\n  currentUserSubscription: Subscription;\n  name$;\n  name: string;\n  currentUser: JwtResponse;\n  root = '/';\n  Role = Role;\n\n  constructor(private userService: UserService,\n              private router: Router,\n  ) {\n\n  }\n\n\n  ngOnInit() {\n    this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\n    this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\n      this.currentUser = user;\n      if (!user || user.role == Role.Customer) {\n        this.root = '/';\n      } else {\n        this.root = '/seller';\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.currentUserSubscription.unsubscribe();\n    // this.name$.unsubscribe();\n  }\n\n  logout() {\n    this.userService.logout();\n    // this.router.navigate(['/login'], {queryParams: {logout: 'true'}} );\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" [routerLink]=\"root\">\n    <img src=\"/assets/brand.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n    Simple online shop\n  </a>\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n\n    <div class=\"navbar-nav\" *ngIf=\"!currentUser || currentUser.role == Role.Customer\">\n\n      <!--        <div class=\"item-nav-bar\" *ngIf=\"currentUser.role == Role.Customer;else noUser\">-->\n      <a class=\"nav-item nav-link \"\n         routerLink=\"/category/0\">\n        Category1\n      </a>\n      <a class=\"nav-item nav-link\"\n         routerLink=\"/category/1\">\n        Category2\n      </a>\n      <a class=\"nav-item nav-link \"\n         routerLink=\"/category/2\">\n        Category3\n      </a>\n      <a class=\"nav-item nav-link\"\n         routerLink=\"/category/3\">\n        Category4\n      </a>\n      <!--        </div>-->\n    </div>\n\n    <div class=\"navbar-nav ml-auto\">\n      <a *ngIf=\"!currentUser || currentUser.role == Role.Customer\"\n        class=\"nav-item nav-link \" routerLink=\"/cart\">\n        <i class=\"fas fa-shopping-cart\"></i>\n        Cart\n      </a>\n\n      <ng-container *ngIf=\"currentUser; else noUser\">\n        <a class=\"nav-item nav-link \" routerLink=\"/order\">\n          <i class=\"fas fa-list-ul\"></i>\n          Orders\n        </a>\n        <a class=\"nav-item nav-link \" routerLink=\"/profile\">\n          {{name}}\n        </a>\n        <a class=\"nav-item nav-link \" (click)=\"logout()\" routerLink=\"/login\" [queryParams]=\"{logout: true}\">\n          Sign Out\n        </a>\n      </ng-container>\n      <ng-template #noUser>\n        <a class=\"nav-item nav-link \" routerLink=\"/login\">\n          Login\n        </a>\n        <a class=\"nav-item nav-link \" routerLink=\"/register\">\n          Register\n        </a>\n      </ng-template>\n    </div>\n  </div>\n</nav>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {JwtResponse} from \"../../response/JwtResponse\";\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  @Input() currentPage: any;\n  currentUser: JwtResponse;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  counter(i = 1) {\n    return new Array(i);\n  }\n}\n","<div class=\"col-md-12 column\">\n  <ul class=\"pagination justify-content-end\" *ngIf=\"currentUser; else noUser\">\n\n    <li class=\"page-item\" *ngIf=\"currentPage?.number > 0; else prev\">\n      <a\n        class=\"page-link\"\n        [routerLink]=\"['./']\"\n        [queryParams]=\"{ page: currentPage?.number, size: currentPage?.size }\"\n      >Previous</a\n      >\n    </li>\n    <ng-template #prev>\n      <li class=\"page-item  disabled\"><a class=\"page-link\">Previous</a></li>\n    </ng-template>\n\n    <ng-container *ngFor=\"let item of counter(currentPage?.totalPages); let i = index\">\n      <li class=\"page-item\" *ngIf=\"currentPage && currentPage.number != i; else active\">\n        <a class=\"page-link \"\n           routerLink=\"./\"\n           [queryParams]=\"{ page: i + 1, size: currentPage?.size }\"\n        >{{ i + 1 }}</a\n        >\n      </li>\n      <ng-template #active>\n        <li\n          class=\"page-item active \"\n\n        >\n          <button class=\"page-link \" disabled>{{ i + 1 }}</button>\n        </li>\n      </ng-template>\n    </ng-container>\n\n    <li\n      class=\"page-item\"\n      *ngIf=\"currentPage?.number + 1 < currentPage?.totalPages; else next\"\n    >\n      <a\n        class=\"page-link\"\n        [routerLink]=\"['./']\"\n        [queryParams]=\"{\n          page: currentPage?.number + 2,\n          size: currentPage?.size\n        }\"\n      >Next</a\n      >\n    </li>\n    <ng-template #next>\n      <li class=\"page-item disabled \"><a class=\"page-link\">Next</a></li>\n    </ng-template>\n  </ul>\n  <ng-template #noUser>\n\n  </ng-template>\n</div>\n","import {Injectable} from \"@angular/core\";\nimport {apiUrl} from \"../../environments/environment\";\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\nimport {Item} from \"../models/Item\";\nimport {JwtResponse} from \"../response/JwtResponse\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {UserService} from \"./user.service\";\nimport {ProductInOrder} from \"../models/ProductInOrder\";\nimport {Cart} from \"../models/Cart\";\nimport {catchError, map, tap} from \"rxjs/operators\";\nimport {CookieService} from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n\n  private cartUrl = `${apiUrl}/cart`;\n\n  localMap = {};\n\n\n  private itemsSubject: BehaviorSubject<Item[]>;\n  private totalSubject: BehaviorSubject<number>;\n  public items: Observable<Item[]>;\n  public total: Observable<number>;\n\n\n  private currentUser: JwtResponse;\n\n  constructor(private http: HttpClient,\n              private cookieService: CookieService,\n              private userService: UserService) {\n    this.itemsSubject = new BehaviorSubject<Item[]>(null);\n    this.items = this.itemsSubject.asObservable();\n    this.totalSubject = new BehaviorSubject<number>(null);\n    this.total = this.totalSubject.asObservable();\n    this.userService.currentUser.subscribe(user => this.currentUser = user);\n\n\n  }\n\n  private getLocalCart(): ProductInOrder[] {\n    if (this.cookieService.check('cart')) {\n      this.localMap = JSON.parse(this.cookieService.get('cart'));\n      return Object.values(this.localMap);\n    } else {\n      this.localMap = {};\n      return [];\n    }\n  }\n\n  getCart(): Observable<ProductInOrder[]> {\n    const localCart = this.getLocalCart();\n    if (this.currentUser) {\n      if (localCart.length > 0) {\n        return this.http.post<Cart>(this.cartUrl, localCart).pipe(\n          tap(_ => {\n            this.clearLocalCart();\n          }),\n          map(cart => cart.products),\n          catchError(_ => of([]))\n        );\n      } else {\n        return this.http.get<Cart>(this.cartUrl).pipe(\n          map(cart => cart.products),\n          catchError(_ => of([]))\n        );\n      }\n    } else {\n      return of(localCart);\n    }\n  }\n\n  addItem(productInOrder): Observable<boolean> {\n    if (!this.currentUser) {\n      if (this.cookieService.check('cart')) {\n        this.localMap = JSON.parse(this.cookieService.get('cart'));\n      }\n      if (!this.localMap[productInOrder.productId]) {\n        this.localMap[productInOrder.productId] = productInOrder;\n      } else {\n        this.localMap[productInOrder.productId].count += productInOrder.count;\n      }\n      this.cookieService.set('cart', JSON.stringify(this.localMap));\n      return of(true);\n    } else {\n      const url = `${this.cartUrl}/add`;\n      return this.http.post<boolean>(url, {\n        'quantity': productInOrder.count,\n        'productId': productInOrder.productId\n      });\n    }\n  }\n\n  update(productInOrder): Observable<ProductInOrder> {\n\n    if (this.currentUser) {\n      const url = `${this.cartUrl}/${productInOrder.productId}`;\n      return this.http.put<ProductInOrder>(url, productInOrder.count);\n    }\n  }\n\n\n  remove(productInOrder) {\n    if (!this.currentUser) {\n      delete this.localMap[productInOrder.productId];\n      return of(null);\n    } else {\n      const url = `${this.cartUrl}/${productInOrder.productId}`;\n      return this.http.delete(url).pipe();\n    }\n  }\n\n\n  checkout(): Observable<any> {\n    const url = `${this.cartUrl}/checkout`;\n    return this.http.post(url, null).pipe();\n  }\n\n  storeLocalCart() {\n    this.cookieService.set('cart', JSON.stringify(this.localMap));\n  }\n\n  clearLocalCart() {\n    console.log('clear local cart');\n    this.cookieService.delete('cart');\n    this.localMap = {};\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {catchError} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\nimport {Order} from \"../models/Order\";\nimport {apiUrl} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  private orderUrl = `${apiUrl}/order`;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getPage(page = 1, size = 10): Observable<any> {\n    return this.http.get(`${this.orderUrl}?page=${page}&size=${size}`).pipe();\n  }\n\n  show(id): Observable<Order> {\n    return this.http.get<Order>(`${this.orderUrl}/${id}`).pipe(\n      catchError(_ => of(null))\n    );\n  }\n\n  cancel(id): Observable<Order> {\n    return this.http.patch<Order>(`${this.orderUrl}/cancel/${id}`, null).pipe(\n      catchError(_ => of(null))\n    );\n  }\n\n  finish(id): Observable<Order> {\n    return this.http.patch<Order>(`${this.orderUrl}/finish/${id}`, null).pipe(\n      catchError(_ => of(null))\n    );\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {apiUrl} from \"../../environments/environment\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, of} from \"rxjs\";\nimport {ProductInfo} from \"../models/productInfo\";\nimport {catchError} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private productUrl = `${apiUrl}/product`;\n  private categoryUrl = `${apiUrl}/category`;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllInPage(page: number, size: number): Observable<any> {\n    const url = `${this.productUrl}?page=${page}&size=${size}`;\n    return this.http.get(url)\n      .pipe(\n        // tap(_ => console.log(_)),\n      )\n  }\n\n  getCategoryInPage(categoryType: number, page: number, size: number): Observable<any> {\n    const url = `${this.categoryUrl}/${categoryType}?page=${page}&size=${size}`;\n    return this.http.get(url).pipe(\n      // tap(data => console.log(data))\n    );\n  }\n\n  getDetail(id: String): Observable<ProductInfo> {\n    const url = `${this.productUrl}/${id}`;\n    return this.http.get<ProductInfo>(url).pipe(\n      catchError(_ => {\n        console.log(\"Get Detail Failed\");\n        return of(new ProductInfo());\n      })\n    );\n  }\n\n  update(productInfo: ProductInfo): Observable<ProductInfo> {\n    const url = `${apiUrl}/seller/product/${productInfo.productId}/edit`;\n    return this.http.put<ProductInfo>(url, productInfo);\n  }\n\n  create(productInfo: ProductInfo): Observable<ProductInfo> {\n    const url = `${apiUrl}/seller/product/new`;\n    return this.http.post<ProductInfo>(url, productInfo);\n  }\n\n\n  delelte(productInfo: ProductInfo): Observable<any> {\n    const url = `${apiUrl}/seller/product/${productInfo.productId}/delete`;\n    return this.http.delete(url);\n  }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import {User} from \"../models/User\";\nimport {BehaviorSubject, Observable, of, Subject} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {JwtResponse} from \"../response/JwtResponse\";\nimport {CookieService} from 'ngx-cookie-service';\nimport {apiUrl} from \"../../environments/environment\";\nimport {catchError, tap} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private currentUserSubject: BehaviorSubject<JwtResponse>;\n  public currentUser: Observable<JwtResponse>;\n  public nameTerms = new Subject<string>();\n  public name$ = this.nameTerms.asObservable();\n\n  constructor(private http: HttpClient,\n              private cookieService: CookieService) {\n    const memo = localStorage.getItem('currentUser');\n    this.currentUserSubject = new BehaviorSubject<JwtResponse>(JSON.parse(memo));\n    this.currentUser = this.currentUserSubject.asObservable();\n    cookieService.set('currentUser', memo);\n  }\n\n  get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n\n\n  login(loginForm): Observable<JwtResponse> {\n    const url = `${apiUrl}/login`;\n    return this.http.post<JwtResponse>(url, loginForm).pipe(\n      tap(user => {\n        if (user && user.token) {\n          this.cookieService.set('currentUser', JSON.stringify(user));\n          if (loginForm.remembered) {\n            localStorage.setItem('currentUser', JSON.stringify(user));\n          }\n          console.log((user.name));\n          this.nameTerms.next(user.name);\n          this.currentUserSubject.next(user);\n          return user;\n        }\n      }),\n      catchError(this.handleError('Login Failed', null))\n    );\n  }\n\n  logout() {\n    this.currentUserSubject.next(null);\n    localStorage.removeItem('currentUser');\n    this.cookieService.delete('currentUser');\n  }\n\n  signUp(user: User): Observable<User> {\n    const url = `${apiUrl}/register`;\n    return this.http.post<User>(url, user);\n  }\n\n  update(user: User): Observable<User> {\n    const url = `${apiUrl}/profile`;\n    return this.http.put<User>(url, user);\n  }\n\n  get(email: string): Observable<User> {\n    const url = `${apiUrl}/profile/${email}`;\n    return this.http.get<User>(url);\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.log(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\nexport const apiUrl = '//localhost:8080/api';\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}